<?xml version='1.0' encoding='UTF-8'?>
<SmellBaseline>
  <ManuallySuppressedIssues>
    <ID>SpreadOperator:ServiceMain.kt$(*args)</ID>
    <ID>TooManyFunctions:GameStreamObserver.kt$GameStreamObserver : StreamObserver</ID>
    <ID>WildcardImport:HueTest.kt$import org.junit.jupiter.api.Assertions.*</ID>
    <ID>ExplicitItLambdaParameter:CronServicesCoordinator.kt$CronServicesCoordinator${it -> it.start() }</ID>
    <ID>ExplicitItLambdaParameter:GameStreamObserver.kt$GameStreamObserver${ it -> if (!event.appliesTo(it)) { it } Logger.debug("Processing event", event) it }</ID>
    <ID>MaxLineLength:GameEventFilter.kt$GameEventFilter$// TODO add extra operator to discriminate for clusters. E.g: passing a ClusterState be able to guess if the filter will apply</ID>
    <ID>MagicNumber:GameEventSendMessage.kt$GameEventSendMessage$0x02B2</ID>
  </ManuallySuppressedIssues>
  <CurrentIssues/>
</SmellBaseline>
