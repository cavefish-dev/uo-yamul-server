// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.15.8
// source: yamul-backend-game.proto

package services

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MsgTeleportPlayer_PlayerStatus int32

const (
	MsgTeleportPlayer_PlayerStatus_normal            MsgTeleportPlayer_PlayerStatus = 0
	MsgTeleportPlayer_PlayerStatus_canAlterPaperDoll MsgTeleportPlayer_PlayerStatus = 2
	MsgTeleportPlayer_PlayerStatus_poisoned          MsgTeleportPlayer_PlayerStatus = 4
	MsgTeleportPlayer_PlayerStatus_goldenHealth      MsgTeleportPlayer_PlayerStatus = 8
	MsgTeleportPlayer_PlayerStatus_warMode           MsgTeleportPlayer_PlayerStatus = 64
	MsgTeleportPlayer_PlayerStatus_hidden            MsgTeleportPlayer_PlayerStatus = 128
)

// Enum value maps for MsgTeleportPlayer_PlayerStatus.
var (
	MsgTeleportPlayer_PlayerStatus_name = map[int32]string{
		0:   "normal",
		2:   "canAlterPaperDoll",
		4:   "poisoned",
		8:   "goldenHealth",
		64:  "warMode",
		128: "hidden",
	}
	MsgTeleportPlayer_PlayerStatus_value = map[string]int32{
		"normal":            0,
		"canAlterPaperDoll": 2,
		"poisoned":          4,
		"goldenHealth":      8,
		"warMode":           64,
		"hidden":            128,
	}
)

func (x MsgTeleportPlayer_PlayerStatus) Enum() *MsgTeleportPlayer_PlayerStatus {
	p := new(MsgTeleportPlayer_PlayerStatus)
	*p = x
	return p
}

func (x MsgTeleportPlayer_PlayerStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MsgTeleportPlayer_PlayerStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_yamul_backend_game_proto_enumTypes[0].Descriptor()
}

func (MsgTeleportPlayer_PlayerStatus) Type() protoreflect.EnumType {
	return &file_yamul_backend_game_proto_enumTypes[0]
}

func (x MsgTeleportPlayer_PlayerStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MsgTeleportPlayer_PlayerStatus.Descriptor instead.
func (MsgTeleportPlayer_PlayerStatus) EnumDescriptor() ([]byte, []int) {
	return file_yamul_backend_game_proto_rawDescGZIP(), []int{0}
}

type MsgType int32

const (
	MsgType_TypeUndefined               MsgType = 0 // TODO this is a valid value on UO packet ids
	MsgType_TypeClientMoveRequest       MsgType = 512
	MsgType_TypeHealthBar               MsgType = 5888
	MsgType_TypeStatWindowInfo          MsgType = 4352
	MsgType_TypePlayerStartConfirmation MsgType = 6912
	MsgType_TypeTeleportPlayer          MsgType = 8192
	MsgType_TypeMoveAck                 MsgType = 8704
	MsgType_TypeGeneralLightLevel       MsgType = 20224
	MsgType_TypeLoginComplete           MsgType = 21760
	MsgType_TypeCharacterSelection      MsgType = 23808
	MsgType_TypePlayMusic               MsgType = 27904
	MsgType_TypeWarmode                 MsgType = 29184
	MsgType_TypeUpdateObject            MsgType = 30720
	MsgType_TypeMapChange               MsgType = 48904
	MsgType_TypeApplyWorldPatches       MsgType = 48920
	MsgType_TypeExtendedStats           MsgType = 48921
)

// Enum value maps for MsgType.
var (
	MsgType_name = map[int32]string{
		0:     "TypeUndefined",
		512:   "TypeClientMoveRequest",
		5888:  "TypeHealthBar",
		4352:  "TypeStatWindowInfo",
		6912:  "TypePlayerStartConfirmation",
		8192:  "TypeTeleportPlayer",
		8704:  "TypeMoveAck",
		20224: "TypeGeneralLightLevel",
		21760: "TypeLoginComplete",
		23808: "TypeCharacterSelection",
		27904: "TypePlayMusic",
		29184: "TypeWarmode",
		30720: "TypeUpdateObject",
		48904: "TypeMapChange",
		48920: "TypeApplyWorldPatches",
		48921: "TypeExtendedStats",
	}
	MsgType_value = map[string]int32{
		"TypeUndefined":               0,
		"TypeClientMoveRequest":       512,
		"TypeHealthBar":               5888,
		"TypeStatWindowInfo":          4352,
		"TypePlayerStartConfirmation": 6912,
		"TypeTeleportPlayer":          8192,
		"TypeMoveAck":                 8704,
		"TypeGeneralLightLevel":       20224,
		"TypeLoginComplete":           21760,
		"TypeCharacterSelection":      23808,
		"TypePlayMusic":               27904,
		"TypeWarmode":                 29184,
		"TypeUpdateObject":            30720,
		"TypeMapChange":               48904,
		"TypeApplyWorldPatches":       48920,
		"TypeExtendedStats":           48921,
	}
)

func (x MsgType) Enum() *MsgType {
	p := new(MsgType)
	*p = x
	return p
}

func (x MsgType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MsgType) Descriptor() protoreflect.EnumDescriptor {
	return file_yamul_backend_game_proto_enumTypes[1].Descriptor()
}

func (MsgType) Type() protoreflect.EnumType {
	return &file_yamul_backend_game_proto_enumTypes[1]
}

func (x MsgType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MsgType.Descriptor instead.
func (MsgType) EnumDescriptor() ([]byte, []int) {
	return file_yamul_backend_game_proto_rawDescGZIP(), []int{1}
}

type MsgHealthBar_Values_Type int32

const (
	MsgHealthBar_Values_GREEN  MsgHealthBar_Values_Type = 0
	MsgHealthBar_Values_YELLOW MsgHealthBar_Values_Type = 1
)

// Enum value maps for MsgHealthBar_Values_Type.
var (
	MsgHealthBar_Values_Type_name = map[int32]string{
		0: "GREEN",
		1: "YELLOW",
	}
	MsgHealthBar_Values_Type_value = map[string]int32{
		"GREEN":  0,
		"YELLOW": 1,
	}
)

func (x MsgHealthBar_Values_Type) Enum() *MsgHealthBar_Values_Type {
	p := new(MsgHealthBar_Values_Type)
	*p = x
	return p
}

func (x MsgHealthBar_Values_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MsgHealthBar_Values_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_yamul_backend_game_proto_enumTypes[2].Descriptor()
}

func (MsgHealthBar_Values_Type) Type() protoreflect.EnumType {
	return &file_yamul_backend_game_proto_enumTypes[2]
}

func (x MsgHealthBar_Values_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MsgHealthBar_Values_Type.Descriptor instead.
func (MsgHealthBar_Values_Type) EnumDescriptor() ([]byte, []int) {
	return file_yamul_backend_game_proto_rawDescGZIP(), []int{4, 0, 0}
}

type MsgApplyWorldPatches struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MapCount int32 `protobuf:"varint,1,opt,name=mapCount,proto3" json:"mapCount,omitempty"` // TODO add missing fields
}

func (x *MsgApplyWorldPatches) Reset() {
	*x = MsgApplyWorldPatches{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yamul_backend_game_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgApplyWorldPatches) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgApplyWorldPatches) ProtoMessage() {}

func (x *MsgApplyWorldPatches) ProtoReflect() protoreflect.Message {
	mi := &file_yamul_backend_game_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgApplyWorldPatches.ProtoReflect.Descriptor instead.
func (*MsgApplyWorldPatches) Descriptor() ([]byte, []int) {
	return file_yamul_backend_game_proto_rawDescGZIP(), []int{0}
}

func (x *MsgApplyWorldPatches) GetMapCount() int32 {
	if x != nil {
		return x.MapCount
	}
	return 0
}

type MsgCharacterSelection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Slot     int32  `protobuf:"varint,3,opt,name=slot,proto3" json:"slot,omitempty"`
}

func (x *MsgCharacterSelection) Reset() {
	*x = MsgCharacterSelection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yamul_backend_game_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgCharacterSelection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgCharacterSelection) ProtoMessage() {}

func (x *MsgCharacterSelection) ProtoReflect() protoreflect.Message {
	mi := &file_yamul_backend_game_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgCharacterSelection.ProtoReflect.Descriptor instead.
func (*MsgCharacterSelection) Descriptor() ([]byte, []int) {
	return file_yamul_backend_game_proto_rawDescGZIP(), []int{1}
}

func (x *MsgCharacterSelection) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *MsgCharacterSelection) GetSlot() int32 {
	if x != nil {
		return x.Slot
	}
	return 0
}

type MsgClientMoveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Direction ObjectDirection `protobuf:"varint,1,opt,name=direction,proto3,enum=common.ObjectDirection" json:"direction,omitempty"`
	Sequence  uint32          `protobuf:"varint,2,opt,name=sequence,proto3" json:"sequence,omitempty"`
	AckKey    uint32          `protobuf:"varint,3,opt,name=ackKey,proto3" json:"ackKey,omitempty"`
}

func (x *MsgClientMoveRequest) Reset() {
	*x = MsgClientMoveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yamul_backend_game_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgClientMoveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgClientMoveRequest) ProtoMessage() {}

func (x *MsgClientMoveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_yamul_backend_game_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgClientMoveRequest.ProtoReflect.Descriptor instead.
func (*MsgClientMoveRequest) Descriptor() ([]byte, []int) {
	return file_yamul_backend_game_proto_rawDescGZIP(), []int{2}
}

func (x *MsgClientMoveRequest) GetDirection() ObjectDirection {
	if x != nil {
		return x.Direction
	}
	return ObjectDirection_north
}

func (x *MsgClientMoveRequest) GetSequence() uint32 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *MsgClientMoveRequest) GetAckKey() uint32 {
	if x != nil {
		return x.AckKey
	}
	return 0
}

type MsgExtendedStats struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Msg:
	//
	//	*MsgExtendedStats_Dead
	//	*MsgExtendedStats_Lock
	Msg isMsgExtendedStats_Msg `protobuf_oneof:"msg"`
}

func (x *MsgExtendedStats) Reset() {
	*x = MsgExtendedStats{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yamul_backend_game_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgExtendedStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgExtendedStats) ProtoMessage() {}

func (x *MsgExtendedStats) ProtoReflect() protoreflect.Message {
	mi := &file_yamul_backend_game_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgExtendedStats.ProtoReflect.Descriptor instead.
func (*MsgExtendedStats) Descriptor() ([]byte, []int) {
	return file_yamul_backend_game_proto_rawDescGZIP(), []int{3}
}

func (m *MsgExtendedStats) GetMsg() isMsgExtendedStats_Msg {
	if m != nil {
		return m.Msg
	}
	return nil
}

func (x *MsgExtendedStats) GetDead() *MsgExtendedStats_MsgExtendedStats_Dead {
	if x, ok := x.GetMsg().(*MsgExtendedStats_Dead); ok {
		return x.Dead
	}
	return nil
}

func (x *MsgExtendedStats) GetLock() *MsgExtendedStats_MsgExtendedStats_AttributeLock {
	if x, ok := x.GetMsg().(*MsgExtendedStats_Lock); ok {
		return x.Lock
	}
	return nil
}

type isMsgExtendedStats_Msg interface {
	isMsgExtendedStats_Msg()
}

type MsgExtendedStats_Dead struct {
	Dead *MsgExtendedStats_MsgExtendedStats_Dead `protobuf:"bytes,1,opt,name=dead,proto3,oneof"`
}

type MsgExtendedStats_Lock struct {
	Lock *MsgExtendedStats_MsgExtendedStats_AttributeLock `protobuf:"bytes,2,opt,name=lock,proto3,oneof"`
}

func (*MsgExtendedStats_Dead) isMsgExtendedStats_Msg() {}

func (*MsgExtendedStats_Lock) isMsgExtendedStats_Msg() {}

type MsgHealthBar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     *ObjectId              `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Values []*MsgHealthBar_Values `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *MsgHealthBar) Reset() {
	*x = MsgHealthBar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yamul_backend_game_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgHealthBar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgHealthBar) ProtoMessage() {}

func (x *MsgHealthBar) ProtoReflect() protoreflect.Message {
	mi := &file_yamul_backend_game_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgHealthBar.ProtoReflect.Descriptor instead.
func (*MsgHealthBar) Descriptor() ([]byte, []int) {
	return file_yamul_backend_game_proto_rawDescGZIP(), []int{4}
}

func (x *MsgHealthBar) GetId() *ObjectId {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *MsgHealthBar) GetValues() []*MsgHealthBar_Values {
	if x != nil {
		return x.Values
	}
	return nil
}

type MsgGeneralLightLevel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Level uint32 `protobuf:"varint,1,opt,name=level,proto3" json:"level,omitempty"`
}

func (x *MsgGeneralLightLevel) Reset() {
	*x = MsgGeneralLightLevel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yamul_backend_game_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgGeneralLightLevel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgGeneralLightLevel) ProtoMessage() {}

func (x *MsgGeneralLightLevel) ProtoReflect() protoreflect.Message {
	mi := &file_yamul_backend_game_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgGeneralLightLevel.ProtoReflect.Descriptor instead.
func (*MsgGeneralLightLevel) Descriptor() ([]byte, []int) {
	return file_yamul_backend_game_proto_rawDescGZIP(), []int{5}
}

func (x *MsgGeneralLightLevel) GetLevel() uint32 {
	if x != nil {
		return x.Level
	}
	return 0
}

type MsgMapChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MapId int32 `protobuf:"varint,1,opt,name=mapId,proto3" json:"mapId,omitempty"`
}

func (x *MsgMapChange) Reset() {
	*x = MsgMapChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yamul_backend_game_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgMapChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgMapChange) ProtoMessage() {}

func (x *MsgMapChange) ProtoReflect() protoreflect.Message {
	mi := &file_yamul_backend_game_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgMapChange.ProtoReflect.Descriptor instead.
func (*MsgMapChange) Descriptor() ([]byte, []int) {
	return file_yamul_backend_game_proto_rawDescGZIP(), []int{6}
}

func (x *MsgMapChange) GetMapId() int32 {
	if x != nil {
		return x.MapId
	}
	return 0
}

type MsgMoveAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sequence       uint32    `protobuf:"varint,1,opt,name=sequence,proto3" json:"sequence,omitempty"`
	NotorietyFlags Notoriety `protobuf:"varint,2,opt,name=notorietyFlags,proto3,enum=common.Notoriety" json:"notorietyFlags,omitempty"`
}

func (x *MsgMoveAck) Reset() {
	*x = MsgMoveAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yamul_backend_game_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgMoveAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgMoveAck) ProtoMessage() {}

func (x *MsgMoveAck) ProtoReflect() protoreflect.Message {
	mi := &file_yamul_backend_game_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgMoveAck.ProtoReflect.Descriptor instead.
func (*MsgMoveAck) Descriptor() ([]byte, []int) {
	return file_yamul_backend_game_proto_rawDescGZIP(), []int{7}
}

func (x *MsgMoveAck) GetSequence() uint32 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *MsgMoveAck) GetNotorietyFlags() Notoriety {
	if x != nil {
		return x.NotorietyFlags
	}
	return Notoriety_Unknown
}

type MsgPlayerStartConfirmation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          *ObjectId       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Coordinates *Coordinate     `protobuf:"bytes,2,opt,name=coordinates,proto3" json:"coordinates,omitempty"`
	Direction   ObjectDirection `protobuf:"varint,3,opt,name=direction,proto3,enum=common.ObjectDirection" json:"direction,omitempty"`
	GraphicId   uint32          `protobuf:"varint,4,opt,name=graphicId,proto3" json:"graphicId,omitempty"`
	Hue         uint32          `protobuf:"varint,5,opt,name=hue,proto3" json:"hue,omitempty"`
}

func (x *MsgPlayerStartConfirmation) Reset() {
	*x = MsgPlayerStartConfirmation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yamul_backend_game_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgPlayerStartConfirmation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgPlayerStartConfirmation) ProtoMessage() {}

func (x *MsgPlayerStartConfirmation) ProtoReflect() protoreflect.Message {
	mi := &file_yamul_backend_game_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgPlayerStartConfirmation.ProtoReflect.Descriptor instead.
func (*MsgPlayerStartConfirmation) Descriptor() ([]byte, []int) {
	return file_yamul_backend_game_proto_rawDescGZIP(), []int{8}
}

func (x *MsgPlayerStartConfirmation) GetId() *ObjectId {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *MsgPlayerStartConfirmation) GetCoordinates() *Coordinate {
	if x != nil {
		return x.Coordinates
	}
	return nil
}

func (x *MsgPlayerStartConfirmation) GetDirection() ObjectDirection {
	if x != nil {
		return x.Direction
	}
	return ObjectDirection_north
}

func (x *MsgPlayerStartConfirmation) GetGraphicId() uint32 {
	if x != nil {
		return x.GraphicId
	}
	return 0
}

func (x *MsgPlayerStartConfirmation) GetHue() uint32 {
	if x != nil {
		return x.Hue
	}
	return 0
}

type MsgPlayMusic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MusicId int32 `protobuf:"varint,1,opt,name=musicId,proto3" json:"musicId,omitempty"`
}

func (x *MsgPlayMusic) Reset() {
	*x = MsgPlayMusic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yamul_backend_game_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgPlayMusic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgPlayMusic) ProtoMessage() {}

func (x *MsgPlayMusic) ProtoReflect() protoreflect.Message {
	mi := &file_yamul_backend_game_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgPlayMusic.ProtoReflect.Descriptor instead.
func (*MsgPlayMusic) Descriptor() ([]byte, []int) {
	return file_yamul_backend_game_proto_rawDescGZIP(), []int{9}
}

func (x *MsgPlayMusic) GetMusicId() int32 {
	if x != nil {
		return x.MusicId
	}
	return 0
}

type MsgStatWindowInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CharacterID      *ObjectId                                  `protobuf:"bytes,1,opt,name=characterID,proto3" json:"characterID,omitempty"`
	CharacterName    string                                     `protobuf:"bytes,2,opt,name=characterName,proto3" json:"characterName,omitempty"`
	HitPointsCurrent uint32                                     `protobuf:"varint,3,opt,name=hitPointsCurrent,proto3" json:"hitPointsCurrent,omitempty"`
	HitPointsMax     uint32                                     `protobuf:"varint,4,opt,name=hitPointsMax,proto3" json:"hitPointsMax,omitempty"`
	FlagNameAllowed  bool                                       `protobuf:"varint,5,opt,name=flagNameAllowed,proto3" json:"flagNameAllowed,omitempty"`
	FlagDisplay      uint32                                     `protobuf:"varint,6,opt,name=flagDisplay,proto3" json:"flagDisplay,omitempty"`
	Level2           *MsgStatWindowInfo_MsgStatWindowInfoLevel2 `protobuf:"bytes,99,opt,name=level2,proto3" json:"level2,omitempty"`
}

func (x *MsgStatWindowInfo) Reset() {
	*x = MsgStatWindowInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yamul_backend_game_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgStatWindowInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgStatWindowInfo) ProtoMessage() {}

func (x *MsgStatWindowInfo) ProtoReflect() protoreflect.Message {
	mi := &file_yamul_backend_game_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgStatWindowInfo.ProtoReflect.Descriptor instead.
func (*MsgStatWindowInfo) Descriptor() ([]byte, []int) {
	return file_yamul_backend_game_proto_rawDescGZIP(), []int{10}
}

func (x *MsgStatWindowInfo) GetCharacterID() *ObjectId {
	if x != nil {
		return x.CharacterID
	}
	return nil
}

func (x *MsgStatWindowInfo) GetCharacterName() string {
	if x != nil {
		return x.CharacterName
	}
	return ""
}

func (x *MsgStatWindowInfo) GetHitPointsCurrent() uint32 {
	if x != nil {
		return x.HitPointsCurrent
	}
	return 0
}

func (x *MsgStatWindowInfo) GetHitPointsMax() uint32 {
	if x != nil {
		return x.HitPointsMax
	}
	return 0
}

func (x *MsgStatWindowInfo) GetFlagNameAllowed() bool {
	if x != nil {
		return x.FlagNameAllowed
	}
	return false
}

func (x *MsgStatWindowInfo) GetFlagDisplay() uint32 {
	if x != nil {
		return x.FlagDisplay
	}
	return 0
}

func (x *MsgStatWindowInfo) GetLevel2() *MsgStatWindowInfo_MsgStatWindowInfoLevel2 {
	if x != nil {
		return x.Level2
	}
	return nil
}

type MsgTeleportPlayer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          *ObjectId                        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	GraphicId   uint32                           `protobuf:"varint,2,opt,name=graphicId,proto3" json:"graphicId,omitempty"`
	Hue         uint32                           `protobuf:"varint,3,opt,name=hue,proto3" json:"hue,omitempty"`
	Status      []MsgTeleportPlayer_PlayerStatus `protobuf:"varint,4,rep,packed,name=status,proto3,enum=game.MsgTeleportPlayer_PlayerStatus" json:"status,omitempty"`
	Coordinates *Coordinate                      `protobuf:"bytes,5,opt,name=coordinates,proto3" json:"coordinates,omitempty"`
	Direction   ObjectDirection                  `protobuf:"varint,8,opt,name=direction,proto3,enum=common.ObjectDirection" json:"direction,omitempty"`
}

func (x *MsgTeleportPlayer) Reset() {
	*x = MsgTeleportPlayer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yamul_backend_game_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgTeleportPlayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgTeleportPlayer) ProtoMessage() {}

func (x *MsgTeleportPlayer) ProtoReflect() protoreflect.Message {
	mi := &file_yamul_backend_game_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgTeleportPlayer.ProtoReflect.Descriptor instead.
func (*MsgTeleportPlayer) Descriptor() ([]byte, []int) {
	return file_yamul_backend_game_proto_rawDescGZIP(), []int{11}
}

func (x *MsgTeleportPlayer) GetId() *ObjectId {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *MsgTeleportPlayer) GetGraphicId() uint32 {
	if x != nil {
		return x.GraphicId
	}
	return 0
}

func (x *MsgTeleportPlayer) GetHue() uint32 {
	if x != nil {
		return x.Hue
	}
	return 0
}

func (x *MsgTeleportPlayer) GetStatus() []MsgTeleportPlayer_PlayerStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *MsgTeleportPlayer) GetCoordinates() *Coordinate {
	if x != nil {
		return x.Coordinates
	}
	return nil
}

func (x *MsgTeleportPlayer) GetDirection() ObjectDirection {
	if x != nil {
		return x.Direction
	}
	return ObjectDirection_north
}

type MsgUpdateObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             *ObjectId               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	GraphicId      uint32                  `protobuf:"varint,2,opt,name=graphicId,proto3" json:"graphicId,omitempty"`
	XLoc           uint32                  `protobuf:"varint,3,opt,name=xLoc,proto3" json:"xLoc,omitempty"`
	YLoc           uint32                  `protobuf:"varint,4,opt,name=yLoc,proto3" json:"yLoc,omitempty"`
	ZLoc           uint32                  `protobuf:"varint,5,opt,name=zLoc,proto3" json:"zLoc,omitempty"`
	Direction      uint32                  `protobuf:"varint,6,opt,name=direction,proto3" json:"direction,omitempty"`
	Hue            uint32                  `protobuf:"varint,7,opt,name=hue,proto3" json:"hue,omitempty"`
	Flags          uint32                  `protobuf:"varint,8,opt,name=flags,proto3" json:"flags,omitempty"`
	NotorietyFlags Notoriety               `protobuf:"varint,9,opt,name=notorietyFlags,proto3,enum=common.Notoriety" json:"notorietyFlags,omitempty"`
	Items          []*MsgUpdateObjectItems `protobuf:"bytes,10,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *MsgUpdateObject) Reset() {
	*x = MsgUpdateObject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yamul_backend_game_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateObject) ProtoMessage() {}

func (x *MsgUpdateObject) ProtoReflect() protoreflect.Message {
	mi := &file_yamul_backend_game_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgUpdateObject.ProtoReflect.Descriptor instead.
func (*MsgUpdateObject) Descriptor() ([]byte, []int) {
	return file_yamul_backend_game_proto_rawDescGZIP(), []int{12}
}

func (x *MsgUpdateObject) GetId() *ObjectId {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *MsgUpdateObject) GetGraphicId() uint32 {
	if x != nil {
		return x.GraphicId
	}
	return 0
}

func (x *MsgUpdateObject) GetXLoc() uint32 {
	if x != nil {
		return x.XLoc
	}
	return 0
}

func (x *MsgUpdateObject) GetYLoc() uint32 {
	if x != nil {
		return x.YLoc
	}
	return 0
}

func (x *MsgUpdateObject) GetZLoc() uint32 {
	if x != nil {
		return x.ZLoc
	}
	return 0
}

func (x *MsgUpdateObject) GetDirection() uint32 {
	if x != nil {
		return x.Direction
	}
	return 0
}

func (x *MsgUpdateObject) GetHue() uint32 {
	if x != nil {
		return x.Hue
	}
	return 0
}

func (x *MsgUpdateObject) GetFlags() uint32 {
	if x != nil {
		return x.Flags
	}
	return 0
}

func (x *MsgUpdateObject) GetNotorietyFlags() Notoriety {
	if x != nil {
		return x.NotorietyFlags
	}
	return Notoriety_Unknown
}

func (x *MsgUpdateObject) GetItems() []*MsgUpdateObjectItems {
	if x != nil {
		return x.Items
	}
	return nil
}

type MsgUpdateObjectItems struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        *ObjectId `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	GraphicId uint32    `protobuf:"varint,2,opt,name=graphicId,proto3" json:"graphicId,omitempty"`
	Layer     uint32    `protobuf:"varint,3,opt,name=layer,proto3" json:"layer,omitempty"`
	Hue       uint32    `protobuf:"varint,4,opt,name=hue,proto3" json:"hue,omitempty"`
}

func (x *MsgUpdateObjectItems) Reset() {
	*x = MsgUpdateObjectItems{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yamul_backend_game_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateObjectItems) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateObjectItems) ProtoMessage() {}

func (x *MsgUpdateObjectItems) ProtoReflect() protoreflect.Message {
	mi := &file_yamul_backend_game_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgUpdateObjectItems.ProtoReflect.Descriptor instead.
func (*MsgUpdateObjectItems) Descriptor() ([]byte, []int) {
	return file_yamul_backend_game_proto_rawDescGZIP(), []int{13}
}

func (x *MsgUpdateObjectItems) GetId() *ObjectId {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *MsgUpdateObjectItems) GetGraphicId() uint32 {
	if x != nil {
		return x.GraphicId
	}
	return 0
}

func (x *MsgUpdateObjectItems) GetLayer() uint32 {
	if x != nil {
		return x.Layer
	}
	return 0
}

func (x *MsgUpdateObjectItems) GetHue() uint32 {
	if x != nil {
		return x.Hue
	}
	return 0
}

type MsgWarmode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsWarmode bool `protobuf:"varint,1,opt,name=isWarmode,proto3" json:"isWarmode,omitempty"`
}

func (x *MsgWarmode) Reset() {
	*x = MsgWarmode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yamul_backend_game_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgWarmode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgWarmode) ProtoMessage() {}

func (x *MsgWarmode) ProtoReflect() protoreflect.Message {
	mi := &file_yamul_backend_game_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgWarmode.ProtoReflect.Descriptor instead.
func (*MsgWarmode) Descriptor() ([]byte, []int) {
	return file_yamul_backend_game_proto_rawDescGZIP(), []int{14}
}

func (x *MsgWarmode) GetIsWarmode() bool {
	if x != nil {
		return x.IsWarmode
	}
	return false
}

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Msg:
	//
	//	*Message_ClientMoveRequest
	//	*Message_HealthBar
	//	*Message_StatWindowInfo
	//	*Message_PlayerStartConfirmation
	//	*Message_TeleportPlayer
	//	*Message_MoveAck
	//	*Message_GeneralLightLevel
	//	*Message_CharacterSelection
	//	*Message_PlayMusic
	//	*Message_Warmode
	//	*Message_UpdateObject
	//	*Message_MapChange
	//	*Message_ApplyWorldPatches
	//	*Message_ExtendedStats
	Msg isMessage_Msg `protobuf_oneof:"msg"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yamul_backend_game_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_yamul_backend_game_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_yamul_backend_game_proto_rawDescGZIP(), []int{15}
}

func (m *Message) GetMsg() isMessage_Msg {
	if m != nil {
		return m.Msg
	}
	return nil
}

func (x *Message) GetClientMoveRequest() *MsgClientMoveRequest {
	if x, ok := x.GetMsg().(*Message_ClientMoveRequest); ok {
		return x.ClientMoveRequest
	}
	return nil
}

func (x *Message) GetHealthBar() *MsgHealthBar {
	if x, ok := x.GetMsg().(*Message_HealthBar); ok {
		return x.HealthBar
	}
	return nil
}

func (x *Message) GetStatWindowInfo() *MsgStatWindowInfo {
	if x, ok := x.GetMsg().(*Message_StatWindowInfo); ok {
		return x.StatWindowInfo
	}
	return nil
}

func (x *Message) GetPlayerStartConfirmation() *MsgPlayerStartConfirmation {
	if x, ok := x.GetMsg().(*Message_PlayerStartConfirmation); ok {
		return x.PlayerStartConfirmation
	}
	return nil
}

func (x *Message) GetTeleportPlayer() *MsgTeleportPlayer {
	if x, ok := x.GetMsg().(*Message_TeleportPlayer); ok {
		return x.TeleportPlayer
	}
	return nil
}

func (x *Message) GetMoveAck() *MsgMoveAck {
	if x, ok := x.GetMsg().(*Message_MoveAck); ok {
		return x.MoveAck
	}
	return nil
}

func (x *Message) GetGeneralLightLevel() *MsgGeneralLightLevel {
	if x, ok := x.GetMsg().(*Message_GeneralLightLevel); ok {
		return x.GeneralLightLevel
	}
	return nil
}

func (x *Message) GetCharacterSelection() *MsgCharacterSelection {
	if x, ok := x.GetMsg().(*Message_CharacterSelection); ok {
		return x.CharacterSelection
	}
	return nil
}

func (x *Message) GetPlayMusic() *MsgPlayMusic {
	if x, ok := x.GetMsg().(*Message_PlayMusic); ok {
		return x.PlayMusic
	}
	return nil
}

func (x *Message) GetWarmode() *MsgWarmode {
	if x, ok := x.GetMsg().(*Message_Warmode); ok {
		return x.Warmode
	}
	return nil
}

func (x *Message) GetUpdateObject() *MsgUpdateObject {
	if x, ok := x.GetMsg().(*Message_UpdateObject); ok {
		return x.UpdateObject
	}
	return nil
}

func (x *Message) GetMapChange() *MsgMapChange {
	if x, ok := x.GetMsg().(*Message_MapChange); ok {
		return x.MapChange
	}
	return nil
}

func (x *Message) GetApplyWorldPatches() *MsgApplyWorldPatches {
	if x, ok := x.GetMsg().(*Message_ApplyWorldPatches); ok {
		return x.ApplyWorldPatches
	}
	return nil
}

func (x *Message) GetExtendedStats() *MsgExtendedStats {
	if x, ok := x.GetMsg().(*Message_ExtendedStats); ok {
		return x.ExtendedStats
	}
	return nil
}

type isMessage_Msg interface {
	isMessage_Msg()
}

type Message_ClientMoveRequest struct {
	ClientMoveRequest *MsgClientMoveRequest `protobuf:"bytes,512,opt,name=clientMoveRequest,proto3,oneof"`
}

type Message_HealthBar struct {
	HealthBar *MsgHealthBar `protobuf:"bytes,5888,opt,name=healthBar,proto3,oneof"`
}

type Message_StatWindowInfo struct {
	StatWindowInfo *MsgStatWindowInfo `protobuf:"bytes,4352,opt,name=statWindowInfo,proto3,oneof"`
}

type Message_PlayerStartConfirmation struct {
	PlayerStartConfirmation *MsgPlayerStartConfirmation `protobuf:"bytes,6912,opt,name=playerStartConfirmation,proto3,oneof"`
}

type Message_TeleportPlayer struct {
	TeleportPlayer *MsgTeleportPlayer `protobuf:"bytes,8192,opt,name=teleportPlayer,proto3,oneof"`
}

type Message_MoveAck struct {
	MoveAck *MsgMoveAck `protobuf:"bytes,8704,opt,name=moveAck,proto3,oneof"`
}

type Message_GeneralLightLevel struct {
	GeneralLightLevel *MsgGeneralLightLevel `protobuf:"bytes,20224,opt,name=GeneralLightLevel,proto3,oneof"`
}

type Message_CharacterSelection struct {
	CharacterSelection *MsgCharacterSelection `protobuf:"bytes,23808,opt,name=characterSelection,proto3,oneof"`
}

type Message_PlayMusic struct {
	PlayMusic *MsgPlayMusic `protobuf:"bytes,27904,opt,name=playMusic,proto3,oneof"`
}

type Message_Warmode struct {
	Warmode *MsgWarmode `protobuf:"bytes,29184,opt,name=warmode,proto3,oneof"`
}

type Message_UpdateObject struct {
	UpdateObject *MsgUpdateObject `protobuf:"bytes,30720,opt,name=updateObject,proto3,oneof"`
}

type Message_MapChange struct {
	MapChange *MsgMapChange `protobuf:"bytes,48904,opt,name=mapChange,proto3,oneof"`
}

type Message_ApplyWorldPatches struct {
	ApplyWorldPatches *MsgApplyWorldPatches `protobuf:"bytes,48920,opt,name=applyWorldPatches,proto3,oneof"`
}

type Message_ExtendedStats struct {
	ExtendedStats *MsgExtendedStats `protobuf:"bytes,48921,opt,name=extendedStats,proto3,oneof"`
}

func (*Message_ClientMoveRequest) isMessage_Msg() {}

func (*Message_HealthBar) isMessage_Msg() {}

func (*Message_StatWindowInfo) isMessage_Msg() {}

func (*Message_PlayerStartConfirmation) isMessage_Msg() {}

func (*Message_TeleportPlayer) isMessage_Msg() {}

func (*Message_MoveAck) isMessage_Msg() {}

func (*Message_GeneralLightLevel) isMessage_Msg() {}

func (*Message_CharacterSelection) isMessage_Msg() {}

func (*Message_PlayMusic) isMessage_Msg() {}

func (*Message_Warmode) isMessage_Msg() {}

func (*Message_UpdateObject) isMessage_Msg() {}

func (*Message_MapChange) isMessage_Msg() {}

func (*Message_ApplyWorldPatches) isMessage_Msg() {}

func (*Message_ExtendedStats) isMessage_Msg() {}

type StreamPackage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type MsgType  `protobuf:"varint,1,opt,name=type,proto3,enum=game.MsgType" json:"type,omitempty"`
	Body *Message `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *StreamPackage) Reset() {
	*x = StreamPackage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yamul_backend_game_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamPackage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamPackage) ProtoMessage() {}

func (x *StreamPackage) ProtoReflect() protoreflect.Message {
	mi := &file_yamul_backend_game_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamPackage.ProtoReflect.Descriptor instead.
func (*StreamPackage) Descriptor() ([]byte, []int) {
	return file_yamul_backend_game_proto_rawDescGZIP(), []int{16}
}

func (x *StreamPackage) GetType() MsgType {
	if x != nil {
		return x.Type
	}
	return MsgType_TypeUndefined
}

func (x *StreamPackage) GetBody() *Message {
	if x != nil {
		return x.Body
	}
	return nil
}

type MsgExtendedStats_MsgExtendedStats_Dead struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     *ObjectId `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	IsDead bool      `protobuf:"varint,2,opt,name=isDead,proto3" json:"isDead,omitempty"`
}

func (x *MsgExtendedStats_MsgExtendedStats_Dead) Reset() {
	*x = MsgExtendedStats_MsgExtendedStats_Dead{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yamul_backend_game_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgExtendedStats_MsgExtendedStats_Dead) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgExtendedStats_MsgExtendedStats_Dead) ProtoMessage() {}

func (x *MsgExtendedStats_MsgExtendedStats_Dead) ProtoReflect() protoreflect.Message {
	mi := &file_yamul_backend_game_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgExtendedStats_MsgExtendedStats_Dead.ProtoReflect.Descriptor instead.
func (*MsgExtendedStats_MsgExtendedStats_Dead) Descriptor() ([]byte, []int) {
	return file_yamul_backend_game_proto_rawDescGZIP(), []int{3, 0}
}

func (x *MsgExtendedStats_MsgExtendedStats_Dead) GetId() *ObjectId {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *MsgExtendedStats_MsgExtendedStats_Dead) GetIsDead() bool {
	if x != nil {
		return x.IsDead
	}
	return false
}

type MsgExtendedStats_MsgExtendedStats_AttributeLock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      *ObjectId `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	StrLock bool      `protobuf:"varint,2,opt,name=strLock,proto3" json:"strLock,omitempty"`
	DexLock bool      `protobuf:"varint,3,opt,name=dexLock,proto3" json:"dexLock,omitempty"`
	IntLock bool      `protobuf:"varint,4,opt,name=intLock,proto3" json:"intLock,omitempty"`
}

func (x *MsgExtendedStats_MsgExtendedStats_AttributeLock) Reset() {
	*x = MsgExtendedStats_MsgExtendedStats_AttributeLock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yamul_backend_game_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgExtendedStats_MsgExtendedStats_AttributeLock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgExtendedStats_MsgExtendedStats_AttributeLock) ProtoMessage() {}

func (x *MsgExtendedStats_MsgExtendedStats_AttributeLock) ProtoReflect() protoreflect.Message {
	mi := &file_yamul_backend_game_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgExtendedStats_MsgExtendedStats_AttributeLock.ProtoReflect.Descriptor instead.
func (*MsgExtendedStats_MsgExtendedStats_AttributeLock) Descriptor() ([]byte, []int) {
	return file_yamul_backend_game_proto_rawDescGZIP(), []int{3, 1}
}

func (x *MsgExtendedStats_MsgExtendedStats_AttributeLock) GetId() *ObjectId {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *MsgExtendedStats_MsgExtendedStats_AttributeLock) GetStrLock() bool {
	if x != nil {
		return x.StrLock
	}
	return false
}

func (x *MsgExtendedStats_MsgExtendedStats_AttributeLock) GetDexLock() bool {
	if x != nil {
		return x.DexLock
	}
	return false
}

func (x *MsgExtendedStats_MsgExtendedStats_AttributeLock) GetIntLock() bool {
	if x != nil {
		return x.IntLock
	}
	return false
}

type MsgHealthBar_Values struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    MsgHealthBar_Values_Type `protobuf:"varint,1,opt,name=type,proto3,enum=game.MsgHealthBar_Values_Type" json:"type,omitempty"`
	Enabled bool                     `protobuf:"varint,2,opt,name=enabled,proto3" json:"enabled,omitempty"`
}

func (x *MsgHealthBar_Values) Reset() {
	*x = MsgHealthBar_Values{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yamul_backend_game_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgHealthBar_Values) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgHealthBar_Values) ProtoMessage() {}

func (x *MsgHealthBar_Values) ProtoReflect() protoreflect.Message {
	mi := &file_yamul_backend_game_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgHealthBar_Values.ProtoReflect.Descriptor instead.
func (*MsgHealthBar_Values) Descriptor() ([]byte, []int) {
	return file_yamul_backend_game_proto_rawDescGZIP(), []int{4, 0}
}

func (x *MsgHealthBar_Values) GetType() MsgHealthBar_Values_Type {
	if x != nil {
		return x.Type
	}
	return MsgHealthBar_Values_GREEN
}

func (x *MsgHealthBar_Values) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

type MsgStatWindowInfo_MsgStatWindowInfoLevel2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Gender             uint32                                                             `protobuf:"varint,7,opt,name=gender,proto3" json:"gender,omitempty"`
	Strength           uint32                                                             `protobuf:"varint,8,opt,name=strength,proto3" json:"strength,omitempty"`
	Intelligence       uint32                                                             `protobuf:"varint,9,opt,name=intelligence,proto3" json:"intelligence,omitempty"`
	StaminaCurrent     uint32                                                             `protobuf:"varint,10,opt,name=staminaCurrent,proto3" json:"staminaCurrent,omitempty"`
	StaminaMax         uint32                                                             `protobuf:"varint,11,opt,name=staminaMax,proto3" json:"staminaMax,omitempty"`
	ManaCurrent        uint32                                                             `protobuf:"varint,12,opt,name=manaCurrent,proto3" json:"manaCurrent,omitempty"`
	ManaMax            uint32                                                             `protobuf:"varint,13,opt,name=manaMax,proto3" json:"manaMax,omitempty"`
	Gold               uint32                                                             `protobuf:"varint,14,opt,name=gold,proto3" json:"gold,omitempty"`
	ResistancePhysical uint32                                                             `protobuf:"varint,15,opt,name=resistancePhysical,proto3" json:"resistancePhysical,omitempty"`
	WeightCurrent      uint32                                                             `protobuf:"varint,16,opt,name=weightCurrent,proto3" json:"weightCurrent,omitempty"`
	Level3             *MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3 `protobuf:"bytes,99,opt,name=level3,proto3" json:"level3,omitempty"`
}

func (x *MsgStatWindowInfo_MsgStatWindowInfoLevel2) Reset() {
	*x = MsgStatWindowInfo_MsgStatWindowInfoLevel2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yamul_backend_game_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgStatWindowInfo_MsgStatWindowInfoLevel2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgStatWindowInfo_MsgStatWindowInfoLevel2) ProtoMessage() {}

func (x *MsgStatWindowInfo_MsgStatWindowInfoLevel2) ProtoReflect() protoreflect.Message {
	mi := &file_yamul_backend_game_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgStatWindowInfo_MsgStatWindowInfoLevel2.ProtoReflect.Descriptor instead.
func (*MsgStatWindowInfo_MsgStatWindowInfoLevel2) Descriptor() ([]byte, []int) {
	return file_yamul_backend_game_proto_rawDescGZIP(), []int{10, 0}
}

func (x *MsgStatWindowInfo_MsgStatWindowInfoLevel2) GetGender() uint32 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *MsgStatWindowInfo_MsgStatWindowInfoLevel2) GetStrength() uint32 {
	if x != nil {
		return x.Strength
	}
	return 0
}

func (x *MsgStatWindowInfo_MsgStatWindowInfoLevel2) GetIntelligence() uint32 {
	if x != nil {
		return x.Intelligence
	}
	return 0
}

func (x *MsgStatWindowInfo_MsgStatWindowInfoLevel2) GetStaminaCurrent() uint32 {
	if x != nil {
		return x.StaminaCurrent
	}
	return 0
}

func (x *MsgStatWindowInfo_MsgStatWindowInfoLevel2) GetStaminaMax() uint32 {
	if x != nil {
		return x.StaminaMax
	}
	return 0
}

func (x *MsgStatWindowInfo_MsgStatWindowInfoLevel2) GetManaCurrent() uint32 {
	if x != nil {
		return x.ManaCurrent
	}
	return 0
}

func (x *MsgStatWindowInfo_MsgStatWindowInfoLevel2) GetManaMax() uint32 {
	if x != nil {
		return x.ManaMax
	}
	return 0
}

func (x *MsgStatWindowInfo_MsgStatWindowInfoLevel2) GetGold() uint32 {
	if x != nil {
		return x.Gold
	}
	return 0
}

func (x *MsgStatWindowInfo_MsgStatWindowInfoLevel2) GetResistancePhysical() uint32 {
	if x != nil {
		return x.ResistancePhysical
	}
	return 0
}

func (x *MsgStatWindowInfo_MsgStatWindowInfoLevel2) GetWeightCurrent() uint32 {
	if x != nil {
		return x.WeightCurrent
	}
	return 0
}

func (x *MsgStatWindowInfo_MsgStatWindowInfoLevel2) GetLevel3() *MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3 {
	if x != nil {
		return x.Level3
	}
	return nil
}

type MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatsCap uint32                                                                                     `protobuf:"varint,17,opt,name=statsCap,proto3" json:"statsCap,omitempty"`
	Level4   *MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3_MsgStatWindowInfoLevel4 `protobuf:"bytes,99,opt,name=level4,proto3" json:"level4,omitempty"`
}

func (x *MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3) Reset() {
	*x = MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yamul_backend_game_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3) ProtoMessage() {}

func (x *MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3) ProtoReflect() protoreflect.Message {
	mi := &file_yamul_backend_game_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3.ProtoReflect.Descriptor instead.
func (*MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3) Descriptor() ([]byte, []int) {
	return file_yamul_backend_game_proto_rawDescGZIP(), []int{10, 0, 0}
}

func (x *MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3) GetStatsCap() uint32 {
	if x != nil {
		return x.StatsCap
	}
	return 0
}

func (x *MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3) GetLevel4() *MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3_MsgStatWindowInfoLevel4 {
	if x != nil {
		return x.Level4
	}
	return nil
}

type MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3_MsgStatWindowInfoLevel4 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FollowersCurrent uint32                                                                                                             `protobuf:"varint,18,opt,name=followersCurrent,proto3" json:"followersCurrent,omitempty"`
	FollowersMax     uint32                                                                                                             `protobuf:"varint,19,opt,name=followersMax,proto3" json:"followersMax,omitempty"`
	Level5           *MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3_MsgStatWindowInfoLevel4_MsgStatWindowInfoLevel5 `protobuf:"bytes,99,opt,name=level5,proto3" json:"level5,omitempty"`
}

func (x *MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3_MsgStatWindowInfoLevel4) Reset() {
	*x = MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3_MsgStatWindowInfoLevel4{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yamul_backend_game_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3_MsgStatWindowInfoLevel4) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3_MsgStatWindowInfoLevel4) ProtoMessage() {
}

func (x *MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3_MsgStatWindowInfoLevel4) ProtoReflect() protoreflect.Message {
	mi := &file_yamul_backend_game_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3_MsgStatWindowInfoLevel4.ProtoReflect.Descriptor instead.
func (*MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3_MsgStatWindowInfoLevel4) Descriptor() ([]byte, []int) {
	return file_yamul_backend_game_proto_rawDescGZIP(), []int{10, 0, 0, 0}
}

func (x *MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3_MsgStatWindowInfoLevel4) GetFollowersCurrent() uint32 {
	if x != nil {
		return x.FollowersCurrent
	}
	return 0
}

func (x *MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3_MsgStatWindowInfoLevel4) GetFollowersMax() uint32 {
	if x != nil {
		return x.FollowersMax
	}
	return 0
}

func (x *MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3_MsgStatWindowInfoLevel4) GetLevel5() *MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3_MsgStatWindowInfoLevel4_MsgStatWindowInfoLevel5 {
	if x != nil {
		return x.Level5
	}
	return nil
}

type MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3_MsgStatWindowInfoLevel4_MsgStatWindowInfoLevel5 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResistanceFire   uint32                                                                                                                                     `protobuf:"varint,20,opt,name=resistanceFire,proto3" json:"resistanceFire,omitempty"`
	ResistanceCold   uint32                                                                                                                                     `protobuf:"varint,21,opt,name=resistanceCold,proto3" json:"resistanceCold,omitempty"`
	ResistancePoison uint32                                                                                                                                     `protobuf:"varint,22,opt,name=resistancePoison,proto3" json:"resistancePoison,omitempty"`
	ResistanceEnergy uint32                                                                                                                                     `protobuf:"varint,23,opt,name=resistanceEnergy,proto3" json:"resistanceEnergy,omitempty"`
	Luck             uint32                                                                                                                                     `protobuf:"varint,24,opt,name=luck,proto3" json:"luck,omitempty"`
	DamageMin        uint32                                                                                                                                     `protobuf:"varint,25,opt,name=damageMin,proto3" json:"damageMin,omitempty"`
	DamageMax        uint32                                                                                                                                     `protobuf:"varint,26,opt,name=damageMax,proto3" json:"damageMax,omitempty"`
	TithingPoints    uint32                                                                                                                                     `protobuf:"varint,27,opt,name=tithingPoints,proto3" json:"tithingPoints,omitempty"`
	Level6           *MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3_MsgStatWindowInfoLevel4_MsgStatWindowInfoLevel5_MsgStatWindowInfoLevel6 `protobuf:"bytes,99,opt,name=level6,proto3" json:"level6,omitempty"`
}

func (x *MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3_MsgStatWindowInfoLevel4_MsgStatWindowInfoLevel5) Reset() {
	*x = MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3_MsgStatWindowInfoLevel4_MsgStatWindowInfoLevel5{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yamul_backend_game_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3_MsgStatWindowInfoLevel4_MsgStatWindowInfoLevel5) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3_MsgStatWindowInfoLevel4_MsgStatWindowInfoLevel5) ProtoMessage() {
}

func (x *MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3_MsgStatWindowInfoLevel4_MsgStatWindowInfoLevel5) ProtoReflect() protoreflect.Message {
	mi := &file_yamul_backend_game_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3_MsgStatWindowInfoLevel4_MsgStatWindowInfoLevel5.ProtoReflect.Descriptor instead.
func (*MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3_MsgStatWindowInfoLevel4_MsgStatWindowInfoLevel5) Descriptor() ([]byte, []int) {
	return file_yamul_backend_game_proto_rawDescGZIP(), []int{10, 0, 0, 0, 0}
}

func (x *MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3_MsgStatWindowInfoLevel4_MsgStatWindowInfoLevel5) GetResistanceFire() uint32 {
	if x != nil {
		return x.ResistanceFire
	}
	return 0
}

func (x *MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3_MsgStatWindowInfoLevel4_MsgStatWindowInfoLevel5) GetResistanceCold() uint32 {
	if x != nil {
		return x.ResistanceCold
	}
	return 0
}

func (x *MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3_MsgStatWindowInfoLevel4_MsgStatWindowInfoLevel5) GetResistancePoison() uint32 {
	if x != nil {
		return x.ResistancePoison
	}
	return 0
}

func (x *MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3_MsgStatWindowInfoLevel4_MsgStatWindowInfoLevel5) GetResistanceEnergy() uint32 {
	if x != nil {
		return x.ResistanceEnergy
	}
	return 0
}

func (x *MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3_MsgStatWindowInfoLevel4_MsgStatWindowInfoLevel5) GetLuck() uint32 {
	if x != nil {
		return x.Luck
	}
	return 0
}

func (x *MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3_MsgStatWindowInfoLevel4_MsgStatWindowInfoLevel5) GetDamageMin() uint32 {
	if x != nil {
		return x.DamageMin
	}
	return 0
}

func (x *MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3_MsgStatWindowInfoLevel4_MsgStatWindowInfoLevel5) GetDamageMax() uint32 {
	if x != nil {
		return x.DamageMax
	}
	return 0
}

func (x *MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3_MsgStatWindowInfoLevel4_MsgStatWindowInfoLevel5) GetTithingPoints() uint32 {
	if x != nil {
		return x.TithingPoints
	}
	return 0
}

func (x *MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3_MsgStatWindowInfoLevel4_MsgStatWindowInfoLevel5) GetLevel6() *MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3_MsgStatWindowInfoLevel4_MsgStatWindowInfoLevel5_MsgStatWindowInfoLevel6 {
	if x != nil {
		return x.Level6
	}
	return nil
}

type MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3_MsgStatWindowInfoLevel4_MsgStatWindowInfoLevel5_MsgStatWindowInfoLevel6 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WeightMax uint32                                                                                                                                                             `protobuf:"varint,28,opt,name=weightMax,proto3" json:"weightMax,omitempty"`
	Race      uint32                                                                                                                                                             `protobuf:"varint,29,opt,name=race,proto3" json:"race,omitempty"`
	Level7    *MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3_MsgStatWindowInfoLevel4_MsgStatWindowInfoLevel5_MsgStatWindowInfoLevel6_MsgStatWindowInfoLevel7 `protobuf:"bytes,99,opt,name=level7,proto3" json:"level7,omitempty"`
}

func (x *MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3_MsgStatWindowInfoLevel4_MsgStatWindowInfoLevel5_MsgStatWindowInfoLevel6) Reset() {
	*x = MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3_MsgStatWindowInfoLevel4_MsgStatWindowInfoLevel5_MsgStatWindowInfoLevel6{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yamul_backend_game_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3_MsgStatWindowInfoLevel4_MsgStatWindowInfoLevel5_MsgStatWindowInfoLevel6) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3_MsgStatWindowInfoLevel4_MsgStatWindowInfoLevel5_MsgStatWindowInfoLevel6) ProtoMessage() {
}

func (x *MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3_MsgStatWindowInfoLevel4_MsgStatWindowInfoLevel5_MsgStatWindowInfoLevel6) ProtoReflect() protoreflect.Message {
	mi := &file_yamul_backend_game_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3_MsgStatWindowInfoLevel4_MsgStatWindowInfoLevel5_MsgStatWindowInfoLevel6.ProtoReflect.Descriptor instead.
func (*MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3_MsgStatWindowInfoLevel4_MsgStatWindowInfoLevel5_MsgStatWindowInfoLevel6) Descriptor() ([]byte, []int) {
	return file_yamul_backend_game_proto_rawDescGZIP(), []int{10, 0, 0, 0, 0, 0}
}

func (x *MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3_MsgStatWindowInfoLevel4_MsgStatWindowInfoLevel5_MsgStatWindowInfoLevel6) GetWeightMax() uint32 {
	if x != nil {
		return x.WeightMax
	}
	return 0
}

func (x *MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3_MsgStatWindowInfoLevel4_MsgStatWindowInfoLevel5_MsgStatWindowInfoLevel6) GetRace() uint32 {
	if x != nil {
		return x.Race
	}
	return 0
}

func (x *MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3_MsgStatWindowInfoLevel4_MsgStatWindowInfoLevel5_MsgStatWindowInfoLevel6) GetLevel7() *MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3_MsgStatWindowInfoLevel4_MsgStatWindowInfoLevel5_MsgStatWindowInfoLevel6_MsgStatWindowInfoLevel7 {
	if x != nil {
		return x.Level7
	}
	return nil
}

type MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3_MsgStatWindowInfoLevel4_MsgStatWindowInfoLevel5_MsgStatWindowInfoLevel6_MsgStatWindowInfoLevel7 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResistancePhysicalMax        uint32 `protobuf:"varint,30,opt,name=resistancePhysicalMax,proto3" json:"resistancePhysicalMax,omitempty"`
	ResistanceFireMax            uint32 `protobuf:"varint,31,opt,name=resistanceFireMax,proto3" json:"resistanceFireMax,omitempty"`
	ResistanceColdMax            uint32 `protobuf:"varint,32,opt,name=resistanceColdMax,proto3" json:"resistanceColdMax,omitempty"`
	ResistancePoisonMax          uint32 `protobuf:"varint,33,opt,name=resistancePoisonMax,proto3" json:"resistancePoisonMax,omitempty"`
	ResistanceEnergyMax          uint32 `protobuf:"varint,34,opt,name=resistanceEnergyMax,proto3" json:"resistanceEnergyMax,omitempty"`
	DefenseChanceIncreaseCurrent uint32 `protobuf:"varint,35,opt,name=defenseChanceIncreaseCurrent,proto3" json:"defenseChanceIncreaseCurrent,omitempty"`
	DefenseChanceIncreaseMax     uint32 `protobuf:"varint,36,opt,name=defenseChanceIncreaseMax,proto3" json:"defenseChanceIncreaseMax,omitempty"`
	HitChanceIncrease            uint32 `protobuf:"varint,37,opt,name=hitChanceIncrease,proto3" json:"hitChanceIncrease,omitempty"`
	SwingSpeedIncrease           uint32 `protobuf:"varint,38,opt,name=swingSpeedIncrease,proto3" json:"swingSpeedIncrease,omitempty"`
	DamageIncrease               uint32 `protobuf:"varint,39,opt,name=damageIncrease,proto3" json:"damageIncrease,omitempty"`
	LowerReagentCost             uint32 `protobuf:"varint,40,opt,name=lowerReagentCost,proto3" json:"lowerReagentCost,omitempty"`
	SpellDamageIncrease          uint32 `protobuf:"varint,41,opt,name=spellDamageIncrease,proto3" json:"spellDamageIncrease,omitempty"`
	FasterCastRecovery           uint32 `protobuf:"varint,42,opt,name=fasterCastRecovery,proto3" json:"fasterCastRecovery,omitempty"`
	FasterCasting                uint32 `protobuf:"varint,43,opt,name=fasterCasting,proto3" json:"fasterCasting,omitempty"`
	LowerManaCost                uint32 `protobuf:"varint,44,opt,name=lowerManaCost,proto3" json:"lowerManaCost,omitempty"`
}

func (x *MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3_MsgStatWindowInfoLevel4_MsgStatWindowInfoLevel5_MsgStatWindowInfoLevel6_MsgStatWindowInfoLevel7) Reset() {
	*x = MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3_MsgStatWindowInfoLevel4_MsgStatWindowInfoLevel5_MsgStatWindowInfoLevel6_MsgStatWindowInfoLevel7{}
	if protoimpl.UnsafeEnabled {
		mi := &file_yamul_backend_game_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3_MsgStatWindowInfoLevel4_MsgStatWindowInfoLevel5_MsgStatWindowInfoLevel6_MsgStatWindowInfoLevel7) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3_MsgStatWindowInfoLevel4_MsgStatWindowInfoLevel5_MsgStatWindowInfoLevel6_MsgStatWindowInfoLevel7) ProtoMessage() {
}

func (x *MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3_MsgStatWindowInfoLevel4_MsgStatWindowInfoLevel5_MsgStatWindowInfoLevel6_MsgStatWindowInfoLevel7) ProtoReflect() protoreflect.Message {
	mi := &file_yamul_backend_game_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3_MsgStatWindowInfoLevel4_MsgStatWindowInfoLevel5_MsgStatWindowInfoLevel6_MsgStatWindowInfoLevel7.ProtoReflect.Descriptor instead.
func (*MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3_MsgStatWindowInfoLevel4_MsgStatWindowInfoLevel5_MsgStatWindowInfoLevel6_MsgStatWindowInfoLevel7) Descriptor() ([]byte, []int) {
	return file_yamul_backend_game_proto_rawDescGZIP(), []int{10, 0, 0, 0, 0, 0, 0}
}

func (x *MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3_MsgStatWindowInfoLevel4_MsgStatWindowInfoLevel5_MsgStatWindowInfoLevel6_MsgStatWindowInfoLevel7) GetResistancePhysicalMax() uint32 {
	if x != nil {
		return x.ResistancePhysicalMax
	}
	return 0
}

func (x *MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3_MsgStatWindowInfoLevel4_MsgStatWindowInfoLevel5_MsgStatWindowInfoLevel6_MsgStatWindowInfoLevel7) GetResistanceFireMax() uint32 {
	if x != nil {
		return x.ResistanceFireMax
	}
	return 0
}

func (x *MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3_MsgStatWindowInfoLevel4_MsgStatWindowInfoLevel5_MsgStatWindowInfoLevel6_MsgStatWindowInfoLevel7) GetResistanceColdMax() uint32 {
	if x != nil {
		return x.ResistanceColdMax
	}
	return 0
}

func (x *MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3_MsgStatWindowInfoLevel4_MsgStatWindowInfoLevel5_MsgStatWindowInfoLevel6_MsgStatWindowInfoLevel7) GetResistancePoisonMax() uint32 {
	if x != nil {
		return x.ResistancePoisonMax
	}
	return 0
}

func (x *MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3_MsgStatWindowInfoLevel4_MsgStatWindowInfoLevel5_MsgStatWindowInfoLevel6_MsgStatWindowInfoLevel7) GetResistanceEnergyMax() uint32 {
	if x != nil {
		return x.ResistanceEnergyMax
	}
	return 0
}

func (x *MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3_MsgStatWindowInfoLevel4_MsgStatWindowInfoLevel5_MsgStatWindowInfoLevel6_MsgStatWindowInfoLevel7) GetDefenseChanceIncreaseCurrent() uint32 {
	if x != nil {
		return x.DefenseChanceIncreaseCurrent
	}
	return 0
}

func (x *MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3_MsgStatWindowInfoLevel4_MsgStatWindowInfoLevel5_MsgStatWindowInfoLevel6_MsgStatWindowInfoLevel7) GetDefenseChanceIncreaseMax() uint32 {
	if x != nil {
		return x.DefenseChanceIncreaseMax
	}
	return 0
}

func (x *MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3_MsgStatWindowInfoLevel4_MsgStatWindowInfoLevel5_MsgStatWindowInfoLevel6_MsgStatWindowInfoLevel7) GetHitChanceIncrease() uint32 {
	if x != nil {
		return x.HitChanceIncrease
	}
	return 0
}

func (x *MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3_MsgStatWindowInfoLevel4_MsgStatWindowInfoLevel5_MsgStatWindowInfoLevel6_MsgStatWindowInfoLevel7) GetSwingSpeedIncrease() uint32 {
	if x != nil {
		return x.SwingSpeedIncrease
	}
	return 0
}

func (x *MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3_MsgStatWindowInfoLevel4_MsgStatWindowInfoLevel5_MsgStatWindowInfoLevel6_MsgStatWindowInfoLevel7) GetDamageIncrease() uint32 {
	if x != nil {
		return x.DamageIncrease
	}
	return 0
}

func (x *MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3_MsgStatWindowInfoLevel4_MsgStatWindowInfoLevel5_MsgStatWindowInfoLevel6_MsgStatWindowInfoLevel7) GetLowerReagentCost() uint32 {
	if x != nil {
		return x.LowerReagentCost
	}
	return 0
}

func (x *MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3_MsgStatWindowInfoLevel4_MsgStatWindowInfoLevel5_MsgStatWindowInfoLevel6_MsgStatWindowInfoLevel7) GetSpellDamageIncrease() uint32 {
	if x != nil {
		return x.SpellDamageIncrease
	}
	return 0
}

func (x *MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3_MsgStatWindowInfoLevel4_MsgStatWindowInfoLevel5_MsgStatWindowInfoLevel6_MsgStatWindowInfoLevel7) GetFasterCastRecovery() uint32 {
	if x != nil {
		return x.FasterCastRecovery
	}
	return 0
}

func (x *MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3_MsgStatWindowInfoLevel4_MsgStatWindowInfoLevel5_MsgStatWindowInfoLevel6_MsgStatWindowInfoLevel7) GetFasterCasting() uint32 {
	if x != nil {
		return x.FasterCasting
	}
	return 0
}

func (x *MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3_MsgStatWindowInfoLevel4_MsgStatWindowInfoLevel5_MsgStatWindowInfoLevel6_MsgStatWindowInfoLevel7) GetLowerManaCost() uint32 {
	if x != nil {
		return x.LowerManaCost
	}
	return 0
}

var File_yamul_backend_game_proto protoreflect.FileDescriptor

var file_yamul_backend_game_proto_rawDesc = []byte{
	0x0a, 0x18, 0x79, 0x61, 0x6d, 0x75, 0x6c, 0x2d, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2d,
	0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x67, 0x61, 0x6d, 0x65,
	0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x32,
	0x0a, 0x14, 0x4d, 0x73, 0x67, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x50,
	0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x70, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x61, 0x70, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0x47, 0x0a, 0x15, 0x4d, 0x73, 0x67, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x22, 0x81, 0x01, 0x0a, 0x14,
	0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x73,
	0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73,
	0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x6b, 0x4b, 0x65,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x61, 0x63, 0x6b, 0x4b, 0x65, 0x79, 0x22,
	0x90, 0x03, 0x0a, 0x10, 0x4d, 0x73, 0x67, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x53,
	0x74, 0x61, 0x74, 0x73, 0x12, 0x42, 0x0a, 0x04, 0x64, 0x65, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x4d, 0x73, 0x67, 0x45, 0x78, 0x74,
	0x65, 0x6e, 0x64, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x4d, 0x73, 0x67, 0x45, 0x78,
	0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x73, 0x5f, 0x44, 0x65, 0x61, 0x64,
	0x48, 0x00, 0x52, 0x04, 0x64, 0x65, 0x61, 0x64, 0x12, 0x4b, 0x0a, 0x04, 0x6c, 0x6f, 0x63, 0x6b,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x4d, 0x73,
	0x67, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x4d,
	0x73, 0x67, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x73, 0x5f,
	0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x48, 0x00, 0x52,
	0x04, 0x6c, 0x6f, 0x63, 0x6b, 0x1a, 0x51, 0x0a, 0x15, 0x4d, 0x73, 0x67, 0x45, 0x78, 0x74, 0x65,
	0x6e, 0x64, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x73, 0x5f, 0x44, 0x65, 0x61, 0x64, 0x12, 0x20,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x44, 0x65, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x69, 0x73, 0x44, 0x65, 0x61, 0x64, 0x1a, 0x90, 0x01, 0x0a, 0x1e, 0x4d, 0x73, 0x67,
	0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x73, 0x5f, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x4c, 0x6f, 0x63, 0x6b, 0x12, 0x20, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x74, 0x72, 0x4c, 0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x73, 0x74, 0x72, 0x4c, 0x6f, 0x63, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x78, 0x4c, 0x6f,
	0x63, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x65, 0x78, 0x4c, 0x6f, 0x63,
	0x6b, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x6e, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x69, 0x6e, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x42, 0x05, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x22, 0xda, 0x01, 0x0a, 0x0c, 0x4d, 0x73, 0x67, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x42, 0x61, 0x72, 0x12, 0x20, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x52, 0x02, 0x69, 0x64, 0x12, 0x31, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x4d, 0x73, 0x67,
	0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x42, 0x61, 0x72, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x1a, 0x75, 0x0a, 0x06, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x12, 0x32, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1e, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x4d, 0x73, 0x67, 0x48, 0x65, 0x61, 0x6c, 0x74,
	0x68, 0x42, 0x61, 0x72, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x2e, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x22, 0x1d, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x47, 0x52, 0x45, 0x45,
	0x4e, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x59, 0x45, 0x4c, 0x4c, 0x4f, 0x57, 0x10, 0x01, 0x22,
	0x2c, 0x0a, 0x14, 0x4d, 0x73, 0x67, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x4c, 0x69, 0x67,
	0x68, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x24, 0x0a,
	0x0c, 0x4d, 0x73, 0x67, 0x4d, 0x61, 0x70, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x6d, 0x61, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6d, 0x61,
	0x70, 0x49, 0x64, 0x22, 0x63, 0x0a, 0x0a, 0x4d, 0x73, 0x67, 0x4d, 0x6f, 0x76, 0x65, 0x41, 0x63,
	0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x39, 0x0a,
	0x0e, 0x6e, 0x6f, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x74, 0x79, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4e,
	0x6f, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x74, 0x79, 0x52, 0x0e, 0x6e, 0x6f, 0x74, 0x6f, 0x72, 0x69,
	0x65, 0x74, 0x79, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x22, 0xdb, 0x01, 0x0a, 0x1a, 0x4d, 0x73, 0x67,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x52, 0x02, 0x69, 0x64, 0x12, 0x34, 0x0a, 0x0b, 0x63, 0x6f, 0x6f,
	0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61,
	0x74, 0x65, 0x52, 0x0b, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x12,
	0x35, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69, 0x72,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x72, 0x61, 0x70, 0x68, 0x69,
	0x63, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x67, 0x72, 0x61, 0x70, 0x68,
	0x69, 0x63, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x68, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x03, 0x68, 0x75, 0x65, 0x22, 0x28, 0x0a, 0x0c, 0x4d, 0x73, 0x67, 0x50, 0x6c, 0x61,
	0x79, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x49, 0x64,
	0x22, 0xac, 0x15, 0x0a, 0x11, 0x4d, 0x73, 0x67, 0x53, 0x74, 0x61, 0x74, 0x57, 0x69, 0x6e, 0x64,
	0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x32, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x52, 0x0b, 0x63,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x68,
	0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x2a, 0x0a, 0x10, 0x68, 0x69, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x43, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x68, 0x69, 0x74, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c,
	0x68, 0x69, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x4d, 0x61, 0x78, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0c, 0x68, 0x69, 0x74, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x4d, 0x61, 0x78,
	0x12, 0x28, 0x0a, 0x0f, 0x66, 0x6c, 0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x41, 0x6c, 0x6c, 0x6f,
	0x77, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x66, 0x6c, 0x61, 0x67, 0x4e,
	0x61, 0x6d, 0x65, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x6c,
	0x61, 0x67, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0b, 0x66, 0x6c, 0x61, 0x67, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x12, 0x47, 0x0a, 0x06,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x32, 0x18, 0x63, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x67,
	0x61, 0x6d, 0x65, 0x2e, 0x4d, 0x73, 0x67, 0x53, 0x74, 0x61, 0x74, 0x57, 0x69, 0x6e, 0x64, 0x6f,
	0x77, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x4d, 0x73, 0x67, 0x53, 0x74, 0x61, 0x74, 0x57, 0x69, 0x6e,
	0x64, 0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x32, 0x52, 0x06, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x32, 0x1a, 0xd7, 0x12, 0x0a, 0x17, 0x4d, 0x73, 0x67, 0x53, 0x74, 0x61,
	0x74, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x32, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x72,
	0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x74, 0x72,
	0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x6c, 0x6c, 0x69,
	0x67, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x69, 0x6e, 0x74,
	0x65, 0x6c, 0x6c, 0x69, 0x67, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x74, 0x61,
	0x6d, 0x69, 0x6e, 0x61, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0e, 0x73, 0x74, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x4d, 0x61, 0x78, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x4d, 0x61,
	0x78, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x61, 0x6e, 0x61, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6d, 0x61, 0x6e, 0x61, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x6e, 0x61, 0x4d, 0x61, 0x78, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6d, 0x61, 0x6e, 0x61, 0x4d, 0x61, 0x78, 0x12, 0x12, 0x0a,
	0x04, 0x67, 0x6f, 0x6c, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x67, 0x6f, 0x6c,
	0x64, 0x12, 0x2e, 0x0a, 0x12, 0x72, 0x65, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x50,
	0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x72,
	0x65, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61,
	0x6c, 0x12, 0x24, 0x0a, 0x0d, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x5f, 0x0a, 0x06, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x33, 0x18, 0x63, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x47, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x4d,
	0x73, 0x67, 0x53, 0x74, 0x61, 0x74, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f,
	0x2e, 0x4d, 0x73, 0x67, 0x53, 0x74, 0x61, 0x74, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x49, 0x6e,
	0x66, 0x6f, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x53, 0x74, 0x61, 0x74,
	0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x33,
	0x52, 0x06, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x33, 0x1a, 0x94, 0x0f, 0x0a, 0x17, 0x4d, 0x73, 0x67,
	0x53, 0x74, 0x61, 0x74, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x33, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x74, 0x73, 0x43, 0x61, 0x70,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x73, 0x43, 0x61, 0x70,
	0x12, 0x77, 0x0a, 0x06, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x34, 0x18, 0x63, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x5f, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x4d, 0x73, 0x67, 0x53, 0x74, 0x61, 0x74, 0x57,
	0x69, 0x6e, 0x64, 0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x4d, 0x73, 0x67, 0x53, 0x74, 0x61,
	0x74, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x32, 0x2e, 0x4d, 0x73, 0x67, 0x53, 0x74, 0x61, 0x74, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x49,
	0x6e, 0x66, 0x6f, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x33, 0x2e, 0x4d, 0x73, 0x67, 0x53, 0x74, 0x61,
	0x74, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x34, 0x52, 0x06, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x34, 0x1a, 0xe3, 0x0d, 0x0a, 0x17, 0x4d, 0x73,
	0x67, 0x53, 0x74, 0x61, 0x74, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x34, 0x12, 0x2a, 0x0a, 0x10, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65,
	0x72, 0x73, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x10, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x73, 0x4d, 0x61,
	0x78, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65,
	0x72, 0x73, 0x4d, 0x61, 0x78, 0x12, 0x8f, 0x01, 0x0a, 0x06, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x35,
	0x18, 0x63, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x77, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x4d, 0x73,
	0x67, 0x53, 0x74, 0x61, 0x74, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x2e,
	0x4d, 0x73, 0x67, 0x53, 0x74, 0x61, 0x74, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x49, 0x6e, 0x66,
	0x6f, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x53, 0x74, 0x61, 0x74, 0x57,
	0x69, 0x6e, 0x64, 0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x33, 0x2e,
	0x4d, 0x73, 0x67, 0x53, 0x74, 0x61, 0x74, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x49, 0x6e, 0x66,
	0x6f, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x34, 0x2e, 0x4d, 0x73, 0x67, 0x53, 0x74, 0x61, 0x74, 0x57,
	0x69, 0x6e, 0x64, 0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x35, 0x52,
	0x06, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x35, 0x1a, 0xe5, 0x0b, 0x0a, 0x17, 0x4d, 0x73, 0x67, 0x53,
	0x74, 0x61, 0x74, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x35, 0x12, 0x26, 0x0a, 0x0e, 0x72, 0x65, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x46, 0x69, 0x72, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x72, 0x65, 0x73,
	0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x46, 0x69, 0x72, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x72,
	0x65, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x6c, 0x64, 0x18, 0x15, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0e, 0x72, 0x65, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x43,
	0x6f, 0x6c, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x50, 0x6f, 0x69, 0x73, 0x6f, 0x6e, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x72,
	0x65, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x6f, 0x69, 0x73, 0x6f, 0x6e, 0x12,
	0x2a, 0x0a, 0x10, 0x72, 0x65, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x45, 0x6e, 0x65,
	0x72, 0x67, 0x79, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x72, 0x65, 0x73, 0x69, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6c,
	0x75, 0x63, 0x6b, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x6c, 0x75, 0x63, 0x6b, 0x12,
	0x1c, 0x0a, 0x09, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x4d, 0x69, 0x6e, 0x18, 0x19, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x4d, 0x69, 0x6e, 0x12, 0x1c, 0x0a,
	0x09, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x4d, 0x61, 0x78, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x4d, 0x61, 0x78, 0x12, 0x24, 0x0a, 0x0d, 0x74,
	0x69, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x1b, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0d, 0x74, 0x69, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x73, 0x12, 0xa8, 0x01, 0x0a, 0x06, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x36, 0x18, 0x63, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x8f, 0x01, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x4d, 0x73, 0x67, 0x53, 0x74,
	0x61, 0x74, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x4d, 0x73, 0x67,
	0x53, 0x74, 0x61, 0x74, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x32, 0x2e, 0x4d, 0x73, 0x67, 0x53, 0x74, 0x61, 0x74, 0x57, 0x69, 0x6e, 0x64,
	0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x33, 0x2e, 0x4d, 0x73, 0x67,
	0x53, 0x74, 0x61, 0x74, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x34, 0x2e, 0x4d, 0x73, 0x67, 0x53, 0x74, 0x61, 0x74, 0x57, 0x69, 0x6e, 0x64,
	0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x35, 0x2e, 0x4d, 0x73, 0x67,
	0x53, 0x74, 0x61, 0x74, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x36, 0x52, 0x06, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x36, 0x1a, 0x80, 0x08, 0x0a,
	0x17, 0x4d, 0x73, 0x67, 0x53, 0x74, 0x61, 0x74, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x49, 0x6e,
	0x66, 0x6f, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x36, 0x12, 0x1c, 0x0a, 0x09, 0x77, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x4d, 0x61, 0x78, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x77, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x4d, 0x61, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x63, 0x65, 0x18, 0x1d,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x72, 0x61, 0x63, 0x65, 0x12, 0xc0, 0x01, 0x0a, 0x06, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x37, 0x18, 0x63, 0x20, 0x01, 0x28, 0x0b, 0x32, 0xa7, 0x01, 0x2e, 0x67,
	0x61, 0x6d, 0x65, 0x2e, 0x4d, 0x73, 0x67, 0x53, 0x74, 0x61, 0x74, 0x57, 0x69, 0x6e, 0x64, 0x6f,
	0x77, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x4d, 0x73, 0x67, 0x53, 0x74, 0x61, 0x74, 0x57, 0x69, 0x6e,
	0x64, 0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x32, 0x2e, 0x4d, 0x73,
	0x67, 0x53, 0x74, 0x61, 0x74, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x33, 0x2e, 0x4d, 0x73, 0x67, 0x53, 0x74, 0x61, 0x74, 0x57, 0x69, 0x6e,
	0x64, 0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x34, 0x2e, 0x4d, 0x73,
	0x67, 0x53, 0x74, 0x61, 0x74, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x35, 0x2e, 0x4d, 0x73, 0x67, 0x53, 0x74, 0x61, 0x74, 0x57, 0x69, 0x6e,
	0x64, 0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x36, 0x2e, 0x4d, 0x73,
	0x67, 0x53, 0x74, 0x61, 0x74, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x37, 0x52, 0x06, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x37, 0x1a, 0xef, 0x05,
	0x0a, 0x17, 0x4d, 0x73, 0x67, 0x53, 0x74, 0x61, 0x74, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x49,
	0x6e, 0x66, 0x6f, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x37, 0x12, 0x34, 0x0a, 0x15, 0x72, 0x65, 0x73,
	0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x4d,
	0x61, 0x78, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x15, 0x72, 0x65, 0x73, 0x69, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x50, 0x68, 0x79, 0x73, 0x69, 0x63, 0x61, 0x6c, 0x4d, 0x61, 0x78, 0x12,
	0x2c, 0x0a, 0x11, 0x72, 0x65, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x46, 0x69, 0x72,
	0x65, 0x4d, 0x61, 0x78, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x72, 0x65, 0x73, 0x69,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x46, 0x69, 0x72, 0x65, 0x4d, 0x61, 0x78, 0x12, 0x2c, 0x0a,
	0x11, 0x72, 0x65, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x6c, 0x64, 0x4d,
	0x61, 0x78, 0x18, 0x20, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x72, 0x65, 0x73, 0x69, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x6c, 0x64, 0x4d, 0x61, 0x78, 0x12, 0x30, 0x0a, 0x13, 0x72,
	0x65, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x50, 0x6f, 0x69, 0x73, 0x6f, 0x6e, 0x4d,
	0x61, 0x78, 0x18, 0x21, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x72, 0x65, 0x73, 0x69, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x50, 0x6f, 0x69, 0x73, 0x6f, 0x6e, 0x4d, 0x61, 0x78, 0x12, 0x30, 0x0a,
	0x13, 0x72, 0x65, 0x73, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x45, 0x6e, 0x65, 0x72, 0x67,
	0x79, 0x4d, 0x61, 0x78, 0x18, 0x22, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x72, 0x65, 0x73, 0x69,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x4d, 0x61, 0x78, 0x12,
	0x42, 0x0a, 0x1c, 0x64, 0x65, 0x66, 0x65, 0x6e, 0x73, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x63, 0x65,
	0x49, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18,
	0x23, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x1c, 0x64, 0x65, 0x66, 0x65, 0x6e, 0x73, 0x65, 0x43, 0x68,
	0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x12, 0x3a, 0x0a, 0x18, 0x64, 0x65, 0x66, 0x65, 0x6e, 0x73, 0x65, 0x43, 0x68,
	0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x18,
	0x24, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x18, 0x64, 0x65, 0x66, 0x65, 0x6e, 0x73, 0x65, 0x43, 0x68,
	0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x4d, 0x61, 0x78, 0x12,
	0x2c, 0x0a, 0x11, 0x68, 0x69, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x63, 0x72,
	0x65, 0x61, 0x73, 0x65, 0x18, 0x25, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x68, 0x69, 0x74, 0x43,
	0x68, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x12, 0x2e, 0x0a,
	0x12, 0x73, 0x77, 0x69, 0x6e, 0x67, 0x53, 0x70, 0x65, 0x65, 0x64, 0x49, 0x6e, 0x63, 0x72, 0x65,
	0x61, 0x73, 0x65, 0x18, 0x26, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x73, 0x77, 0x69, 0x6e, 0x67,
	0x53, 0x70, 0x65, 0x65, 0x64, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x12, 0x26, 0x0a,
	0x0e, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x18,
	0x27, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x64, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x63,
	0x72, 0x65, 0x61, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x52, 0x65,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x73, 0x74, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x10, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x52, 0x65, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x73,
	0x74, 0x12, 0x30, 0x0a, 0x13, 0x73, 0x70, 0x65, 0x6c, 0x6c, 0x44, 0x61, 0x6d, 0x61, 0x67, 0x65,
	0x49, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x18, 0x29, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13,
	0x73, 0x70, 0x65, 0x6c, 0x6c, 0x44, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x63, 0x72, 0x65,
	0x61, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x66, 0x61, 0x73, 0x74, 0x65, 0x72, 0x43, 0x61, 0x73,
	0x74, 0x52, 0x65, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x12, 0x66, 0x61, 0x73, 0x74, 0x65, 0x72, 0x43, 0x61, 0x73, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x66, 0x61, 0x73, 0x74, 0x65, 0x72, 0x43, 0x61, 0x73,
	0x74, 0x69, 0x6e, 0x67, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x66, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x43, 0x61, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x24, 0x0a, 0x0d, 0x6c, 0x6f, 0x77,
	0x65, 0x72, 0x4d, 0x61, 0x6e, 0x61, 0x43, 0x6f, 0x73, 0x74, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0d, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x4d, 0x61, 0x6e, 0x61, 0x43, 0x6f, 0x73, 0x74, 0x22,
	0x90, 0x02, 0x0a, 0x11, 0x4d, 0x73, 0x67, 0x54, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x72, 0x61, 0x70, 0x68,
	0x69, 0x63, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x67, 0x72, 0x61, 0x70,
	0x68, 0x69, 0x63, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x68, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x03, 0x68, 0x75, 0x65, 0x12, 0x3c, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x4d,
	0x73, 0x67, 0x54, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x5f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x34, 0x0a, 0x0b, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e,
	0x61, 0x74, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x52, 0x0b,
	0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x73, 0x12, 0x35, 0x0a, 0x09, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x44, 0x69,
	0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0xc0, 0x02, 0x0a, 0x0f, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x20, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x49, 0x64, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x72, 0x61, 0x70,
	0x68, 0x69, 0x63, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x67, 0x72, 0x61,
	0x70, 0x68, 0x69, 0x63, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x78, 0x4c, 0x6f, 0x63, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x78, 0x4c, 0x6f, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x79, 0x4c,
	0x6f, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x79, 0x4c, 0x6f, 0x63, 0x12, 0x12,
	0x0a, 0x04, 0x7a, 0x4c, 0x6f, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x7a, 0x4c,
	0x6f, 0x63, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x10, 0x0a, 0x03, 0x68, 0x75, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x68,
	0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x39, 0x0a, 0x0e, 0x6e, 0x6f, 0x74, 0x6f,
	0x72, 0x69, 0x65, 0x74, 0x79, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x11, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4e, 0x6f, 0x74, 0x6f, 0x72, 0x69,
	0x65, 0x74, 0x79, 0x52, 0x0e, 0x6e, 0x6f, 0x74, 0x6f, 0x72, 0x69, 0x65, 0x74, 0x79, 0x46, 0x6c,
	0x61, 0x67, 0x73, 0x12, 0x30, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x0a, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x52, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x7e, 0x0a, 0x14, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x20, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x67, 0x72, 0x61, 0x70, 0x68, 0x69, 0x63, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x67, 0x72, 0x61, 0x70, 0x68, 0x69, 0x63, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x68, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x03, 0x68, 0x75, 0x65, 0x22, 0x2a, 0x0a, 0x0a, 0x4d, 0x73, 0x67, 0x57, 0x61, 0x72, 0x6d,
	0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x57, 0x61, 0x72, 0x6d, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x57, 0x61, 0x72, 0x6d, 0x6f, 0x64,
	0x65, 0x22, 0xb2, 0x07, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x4b, 0x0a,
	0x11, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x18, 0x80, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x61, 0x6d, 0x65,
	0x2e, 0x4d, 0x73, 0x67, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x76, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x11, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d,
	0x6f, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x09, 0x68, 0x65,
	0x61, 0x6c, 0x74, 0x68, 0x42, 0x61, 0x72, 0x18, 0x80, 0x2e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x4d, 0x73, 0x67, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x42,
	0x61, 0x72, 0x48, 0x00, 0x52, 0x09, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x42, 0x61, 0x72, 0x12,
	0x42, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x74, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x80, 0x22, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e,
	0x4d, 0x73, 0x67, 0x53, 0x74, 0x61, 0x74, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x49, 0x6e, 0x66,
	0x6f, 0x48, 0x00, 0x52, 0x0e, 0x73, 0x74, 0x61, 0x74, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x5d, 0x0a, 0x17, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x80,
	0x36, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x4d, 0x73, 0x67,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x17, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x42, 0x0a, 0x0e, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x18, 0x80, 0x40, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x61,
	0x6d, 0x65, 0x2e, 0x4d, 0x73, 0x67, 0x54, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x48, 0x00, 0x52, 0x0e, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x2d, 0x0a, 0x07, 0x6d, 0x6f, 0x76, 0x65, 0x41, 0x63,
	0x6b, 0x18, 0x80, 0x44, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e,
	0x4d, 0x73, 0x67, 0x4d, 0x6f, 0x76, 0x65, 0x41, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x6f,
	0x76, 0x65, 0x41, 0x63, 0x6b, 0x12, 0x4c, 0x0a, 0x11, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c,
	0x4c, 0x69, 0x67, 0x68, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x80, 0x9e, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x4d, 0x73, 0x67, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x48, 0x00,
	0x52, 0x11, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x4c, 0x69, 0x67, 0x68, 0x74, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x12, 0x4f, 0x0a, 0x12, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x80, 0xba, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x68, 0x61, 0x72,
	0x61, 0x63, 0x74, 0x65, 0x72, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00,
	0x52, 0x12, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x53, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x4d, 0x75, 0x73, 0x69,
	0x63, 0x18, 0x80, 0xda, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67, 0x61, 0x6d, 0x65,
	0x2e, 0x4d, 0x73, 0x67, 0x50, 0x6c, 0x61, 0x79, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x48, 0x00, 0x52,
	0x09, 0x70, 0x6c, 0x61, 0x79, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x12, 0x2e, 0x0a, 0x07, 0x77, 0x61,
	0x72, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x80, 0xe4, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x67, 0x61, 0x6d, 0x65, 0x2e, 0x4d, 0x73, 0x67, 0x57, 0x61, 0x72, 0x6d, 0x6f, 0x64, 0x65, 0x48,
	0x00, 0x52, 0x07, 0x77, 0x61, 0x72, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x3d, 0x0a, 0x0c, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x80, 0xf0, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x48, 0x00, 0x52, 0x0c, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x34, 0x0a, 0x09, 0x6d, 0x61, 0x70,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x88, 0xfe, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x4d, 0x73, 0x67, 0x4d, 0x61, 0x70, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x48, 0x00, 0x52, 0x09, 0x6d, 0x61, 0x70, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12,
	0x4c, 0x0a, 0x11, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x61, 0x74,
	0x63, 0x68, 0x65, 0x73, 0x18, 0x98, 0xfe, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x61, 0x6d, 0x65, 0x2e, 0x4d, 0x73, 0x67, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x57, 0x6f, 0x72, 0x6c,
	0x64, 0x50, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x48, 0x00, 0x52, 0x11, 0x61, 0x70, 0x70, 0x6c,
	0x79, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x61, 0x74, 0x63, 0x68, 0x65, 0x73, 0x12, 0x40, 0x0a,
	0x0d, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x73, 0x18, 0x99,
	0xfe, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x4d, 0x73,
	0x67, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x73, 0x48, 0x00,
	0x52, 0x0d, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x73, 0x42,
	0x05, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x55, 0x0a, 0x0d, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x21, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x4d, 0x73, 0x67,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x04, 0x62, 0x6f,
	0x64, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x2a, 0x7d, 0x0a,
	0x1e, 0x4d, 0x73, 0x67, 0x54, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x5f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x0a, 0x0a, 0x06, 0x6e, 0x6f, 0x72, 0x6d, 0x61, 0x6c, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x63,
	0x61, 0x6e, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x50, 0x61, 0x70, 0x65, 0x72, 0x44, 0x6f, 0x6c, 0x6c,
	0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x70, 0x6f, 0x69, 0x73, 0x6f, 0x6e, 0x65, 0x64, 0x10, 0x04,
	0x12, 0x10, 0x0a, 0x0c, 0x67, 0x6f, 0x6c, 0x64, 0x65, 0x6e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x10, 0x08, 0x12, 0x0b, 0x0a, 0x07, 0x77, 0x61, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x10, 0x40, 0x12,
	0x0b, 0x0a, 0x06, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x10, 0x80, 0x01, 0x2a, 0x91, 0x03, 0x0a,
	0x07, 0x4d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x11, 0x0a, 0x0d, 0x54, 0x79, 0x70, 0x65,
	0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x15, 0x54,
	0x79, 0x70, 0x65, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x10, 0x80, 0x04, 0x12, 0x12, 0x0a, 0x0d, 0x54, 0x79, 0x70, 0x65, 0x48,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x42, 0x61, 0x72, 0x10, 0x80, 0x2e, 0x12, 0x17, 0x0a, 0x12, 0x54,
	0x79, 0x70, 0x65, 0x53, 0x74, 0x61, 0x74, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x49, 0x6e, 0x66,
	0x6f, 0x10, 0x80, 0x22, 0x12, 0x20, 0x0a, 0x1b, 0x54, 0x79, 0x70, 0x65, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x10, 0x80, 0x36, 0x12, 0x17, 0x0a, 0x12, 0x54, 0x79, 0x70, 0x65, 0x54, 0x65,
	0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x10, 0x80, 0x40, 0x12,
	0x10, 0x0a, 0x0b, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x6f, 0x76, 0x65, 0x41, 0x63, 0x6b, 0x10, 0x80,
	0x44, 0x12, 0x1b, 0x0a, 0x15, 0x54, 0x79, 0x70, 0x65, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c,
	0x4c, 0x69, 0x67, 0x68, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x10, 0x80, 0x9e, 0x01, 0x12, 0x17,
	0x0a, 0x11, 0x54, 0x79, 0x70, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x43, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x65, 0x10, 0x80, 0xaa, 0x01, 0x12, 0x1c, 0x0a, 0x16, 0x54, 0x79, 0x70, 0x65, 0x43,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x10, 0x80, 0xba, 0x01, 0x12, 0x13, 0x0a, 0x0d, 0x54, 0x79, 0x70, 0x65, 0x50, 0x6c, 0x61,
	0x79, 0x4d, 0x75, 0x73, 0x69, 0x63, 0x10, 0x80, 0xda, 0x01, 0x12, 0x11, 0x0a, 0x0b, 0x54, 0x79,
	0x70, 0x65, 0x57, 0x61, 0x72, 0x6d, 0x6f, 0x64, 0x65, 0x10, 0x80, 0xe4, 0x01, 0x12, 0x16, 0x0a,
	0x10, 0x54, 0x79, 0x70, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x10, 0x80, 0xf0, 0x01, 0x12, 0x13, 0x0a, 0x0d, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x61, 0x70,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x10, 0x88, 0xfe, 0x02, 0x12, 0x1b, 0x0a, 0x15, 0x54, 0x79,
	0x70, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x61, 0x74, 0x63,
	0x68, 0x65, 0x73, 0x10, 0x98, 0xfe, 0x02, 0x12, 0x17, 0x0a, 0x11, 0x54, 0x79, 0x70, 0x65, 0x45,
	0x78, 0x74, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x73, 0x10, 0x99, 0xfe, 0x02,
	0x32, 0x4d, 0x0a, 0x0b, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x3e, 0x0a, 0x0e, 0x6f, 0x70, 0x65, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x12, 0x13, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x50,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x1a, 0x13, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x28, 0x01, 0x30, 0x01, 0x42,
	0x41, 0x0a, 0x23, 0x64, 0x65, 0x76, 0x2e, 0x63, 0x61, 0x76, 0x65, 0x66, 0x69, 0x73, 0x68, 0x2e,
	0x79, 0x61, 0x6d, 0x75, 0x6c, 0x2e, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x67, 0x61,
	0x6d, 0x65, 0x2e, 0x61, 0x70, 0x69, 0x50, 0x01, 0x5a, 0x12, 0x2e, 0x2f, 0x62, 0x61, 0x63, 0x6b,
	0x65, 0x6e, 0x64, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x88, 0x01, 0x01, 0xa0,
	0x01, 0x01, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_yamul_backend_game_proto_rawDescOnce sync.Once
	file_yamul_backend_game_proto_rawDescData = file_yamul_backend_game_proto_rawDesc
)

func file_yamul_backend_game_proto_rawDescGZIP() []byte {
	file_yamul_backend_game_proto_rawDescOnce.Do(func() {
		file_yamul_backend_game_proto_rawDescData = protoimpl.X.CompressGZIP(file_yamul_backend_game_proto_rawDescData)
	})
	return file_yamul_backend_game_proto_rawDescData
}

var file_yamul_backend_game_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_yamul_backend_game_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_yamul_backend_game_proto_goTypes = []interface{}{
	(MsgTeleportPlayer_PlayerStatus)(0),                     // 0: game.MsgTeleportPlayer_PlayerStatus
	(MsgType)(0),                                            // 1: game.MsgType
	(MsgHealthBar_Values_Type)(0),                           // 2: game.MsgHealthBar.Values.Type
	(*MsgApplyWorldPatches)(nil),                            // 3: game.MsgApplyWorldPatches
	(*MsgCharacterSelection)(nil),                           // 4: game.MsgCharacterSelection
	(*MsgClientMoveRequest)(nil),                            // 5: game.MsgClientMoveRequest
	(*MsgExtendedStats)(nil),                                // 6: game.MsgExtendedStats
	(*MsgHealthBar)(nil),                                    // 7: game.MsgHealthBar
	(*MsgGeneralLightLevel)(nil),                            // 8: game.MsgGeneralLightLevel
	(*MsgMapChange)(nil),                                    // 9: game.MsgMapChange
	(*MsgMoveAck)(nil),                                      // 10: game.MsgMoveAck
	(*MsgPlayerStartConfirmation)(nil),                      // 11: game.MsgPlayerStartConfirmation
	(*MsgPlayMusic)(nil),                                    // 12: game.MsgPlayMusic
	(*MsgStatWindowInfo)(nil),                               // 13: game.MsgStatWindowInfo
	(*MsgTeleportPlayer)(nil),                               // 14: game.MsgTeleportPlayer
	(*MsgUpdateObject)(nil),                                 // 15: game.MsgUpdateObject
	(*MsgUpdateObjectItems)(nil),                            // 16: game.MsgUpdateObjectItems
	(*MsgWarmode)(nil),                                      // 17: game.MsgWarmode
	(*Message)(nil),                                         // 18: game.Message
	(*StreamPackage)(nil),                                   // 19: game.StreamPackage
	(*MsgExtendedStats_MsgExtendedStats_Dead)(nil),          // 20: game.MsgExtendedStats.MsgExtendedStats_Dead
	(*MsgExtendedStats_MsgExtendedStats_AttributeLock)(nil), // 21: game.MsgExtendedStats.MsgExtendedStats_AttributeLock
	(*MsgHealthBar_Values)(nil),                             // 22: game.MsgHealthBar.Values
	(*MsgStatWindowInfo_MsgStatWindowInfoLevel2)(nil),       // 23: game.MsgStatWindowInfo.MsgStatWindowInfoLevel2
	(*MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3)(nil),                                                                                                 // 24: game.MsgStatWindowInfo.MsgStatWindowInfoLevel2.MsgStatWindowInfoLevel3
	(*MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3_MsgStatWindowInfoLevel4)(nil),                                                                         // 25: game.MsgStatWindowInfo.MsgStatWindowInfoLevel2.MsgStatWindowInfoLevel3.MsgStatWindowInfoLevel4
	(*MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3_MsgStatWindowInfoLevel4_MsgStatWindowInfoLevel5)(nil),                                                 // 26: game.MsgStatWindowInfo.MsgStatWindowInfoLevel2.MsgStatWindowInfoLevel3.MsgStatWindowInfoLevel4.MsgStatWindowInfoLevel5
	(*MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3_MsgStatWindowInfoLevel4_MsgStatWindowInfoLevel5_MsgStatWindowInfoLevel6)(nil),                         // 27: game.MsgStatWindowInfo.MsgStatWindowInfoLevel2.MsgStatWindowInfoLevel3.MsgStatWindowInfoLevel4.MsgStatWindowInfoLevel5.MsgStatWindowInfoLevel6
	(*MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3_MsgStatWindowInfoLevel4_MsgStatWindowInfoLevel5_MsgStatWindowInfoLevel6_MsgStatWindowInfoLevel7)(nil), // 28: game.MsgStatWindowInfo.MsgStatWindowInfoLevel2.MsgStatWindowInfoLevel3.MsgStatWindowInfoLevel4.MsgStatWindowInfoLevel5.MsgStatWindowInfoLevel6.MsgStatWindowInfoLevel7
	(ObjectDirection)(0), // 29: common.ObjectDirection
	(*ObjectId)(nil),     // 30: common.ObjectId
	(Notoriety)(0),       // 31: common.Notoriety
	(*Coordinate)(nil),   // 32: common.Coordinate
}
var file_yamul_backend_game_proto_depIdxs = []int32{
	29, // 0: game.MsgClientMoveRequest.direction:type_name -> common.ObjectDirection
	20, // 1: game.MsgExtendedStats.dead:type_name -> game.MsgExtendedStats.MsgExtendedStats_Dead
	21, // 2: game.MsgExtendedStats.lock:type_name -> game.MsgExtendedStats.MsgExtendedStats_AttributeLock
	30, // 3: game.MsgHealthBar.id:type_name -> common.ObjectId
	22, // 4: game.MsgHealthBar.values:type_name -> game.MsgHealthBar.Values
	31, // 5: game.MsgMoveAck.notorietyFlags:type_name -> common.Notoriety
	30, // 6: game.MsgPlayerStartConfirmation.id:type_name -> common.ObjectId
	32, // 7: game.MsgPlayerStartConfirmation.coordinates:type_name -> common.Coordinate
	29, // 8: game.MsgPlayerStartConfirmation.direction:type_name -> common.ObjectDirection
	30, // 9: game.MsgStatWindowInfo.characterID:type_name -> common.ObjectId
	23, // 10: game.MsgStatWindowInfo.level2:type_name -> game.MsgStatWindowInfo.MsgStatWindowInfoLevel2
	30, // 11: game.MsgTeleportPlayer.id:type_name -> common.ObjectId
	0,  // 12: game.MsgTeleportPlayer.status:type_name -> game.MsgTeleportPlayer_PlayerStatus
	32, // 13: game.MsgTeleportPlayer.coordinates:type_name -> common.Coordinate
	29, // 14: game.MsgTeleportPlayer.direction:type_name -> common.ObjectDirection
	30, // 15: game.MsgUpdateObject.id:type_name -> common.ObjectId
	31, // 16: game.MsgUpdateObject.notorietyFlags:type_name -> common.Notoriety
	16, // 17: game.MsgUpdateObject.items:type_name -> game.MsgUpdateObjectItems
	30, // 18: game.MsgUpdateObjectItems.id:type_name -> common.ObjectId
	5,  // 19: game.Message.clientMoveRequest:type_name -> game.MsgClientMoveRequest
	7,  // 20: game.Message.healthBar:type_name -> game.MsgHealthBar
	13, // 21: game.Message.statWindowInfo:type_name -> game.MsgStatWindowInfo
	11, // 22: game.Message.playerStartConfirmation:type_name -> game.MsgPlayerStartConfirmation
	14, // 23: game.Message.teleportPlayer:type_name -> game.MsgTeleportPlayer
	10, // 24: game.Message.moveAck:type_name -> game.MsgMoveAck
	8,  // 25: game.Message.GeneralLightLevel:type_name -> game.MsgGeneralLightLevel
	4,  // 26: game.Message.characterSelection:type_name -> game.MsgCharacterSelection
	12, // 27: game.Message.playMusic:type_name -> game.MsgPlayMusic
	17, // 28: game.Message.warmode:type_name -> game.MsgWarmode
	15, // 29: game.Message.updateObject:type_name -> game.MsgUpdateObject
	9,  // 30: game.Message.mapChange:type_name -> game.MsgMapChange
	3,  // 31: game.Message.applyWorldPatches:type_name -> game.MsgApplyWorldPatches
	6,  // 32: game.Message.extendedStats:type_name -> game.MsgExtendedStats
	1,  // 33: game.StreamPackage.type:type_name -> game.MsgType
	18, // 34: game.StreamPackage.body:type_name -> game.Message
	30, // 35: game.MsgExtendedStats.MsgExtendedStats_Dead.id:type_name -> common.ObjectId
	30, // 36: game.MsgExtendedStats.MsgExtendedStats_AttributeLock.id:type_name -> common.ObjectId
	2,  // 37: game.MsgHealthBar.Values.type:type_name -> game.MsgHealthBar.Values.Type
	24, // 38: game.MsgStatWindowInfo.MsgStatWindowInfoLevel2.level3:type_name -> game.MsgStatWindowInfo.MsgStatWindowInfoLevel2.MsgStatWindowInfoLevel3
	25, // 39: game.MsgStatWindowInfo.MsgStatWindowInfoLevel2.MsgStatWindowInfoLevel3.level4:type_name -> game.MsgStatWindowInfo.MsgStatWindowInfoLevel2.MsgStatWindowInfoLevel3.MsgStatWindowInfoLevel4
	26, // 40: game.MsgStatWindowInfo.MsgStatWindowInfoLevel2.MsgStatWindowInfoLevel3.MsgStatWindowInfoLevel4.level5:type_name -> game.MsgStatWindowInfo.MsgStatWindowInfoLevel2.MsgStatWindowInfoLevel3.MsgStatWindowInfoLevel4.MsgStatWindowInfoLevel5
	27, // 41: game.MsgStatWindowInfo.MsgStatWindowInfoLevel2.MsgStatWindowInfoLevel3.MsgStatWindowInfoLevel4.MsgStatWindowInfoLevel5.level6:type_name -> game.MsgStatWindowInfo.MsgStatWindowInfoLevel2.MsgStatWindowInfoLevel3.MsgStatWindowInfoLevel4.MsgStatWindowInfoLevel5.MsgStatWindowInfoLevel6
	28, // 42: game.MsgStatWindowInfo.MsgStatWindowInfoLevel2.MsgStatWindowInfoLevel3.MsgStatWindowInfoLevel4.MsgStatWindowInfoLevel5.MsgStatWindowInfoLevel6.level7:type_name -> game.MsgStatWindowInfo.MsgStatWindowInfoLevel2.MsgStatWindowInfoLevel3.MsgStatWindowInfoLevel4.MsgStatWindowInfoLevel5.MsgStatWindowInfoLevel6.MsgStatWindowInfoLevel7
	19, // 43: game.GameService.openGameStream:input_type -> game.StreamPackage
	19, // 44: game.GameService.openGameStream:output_type -> game.StreamPackage
	44, // [44:45] is the sub-list for method output_type
	43, // [43:44] is the sub-list for method input_type
	43, // [43:43] is the sub-list for extension type_name
	43, // [43:43] is the sub-list for extension extendee
	0,  // [0:43] is the sub-list for field type_name
}

func init() { file_yamul_backend_game_proto_init() }
func file_yamul_backend_game_proto_init() {
	if File_yamul_backend_game_proto != nil {
		return
	}
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_yamul_backend_game_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgApplyWorldPatches); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yamul_backend_game_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgCharacterSelection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yamul_backend_game_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgClientMoveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yamul_backend_game_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgExtendedStats); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yamul_backend_game_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgHealthBar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yamul_backend_game_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgGeneralLightLevel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yamul_backend_game_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgMapChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yamul_backend_game_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgMoveAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yamul_backend_game_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgPlayerStartConfirmation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yamul_backend_game_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgPlayMusic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yamul_backend_game_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgStatWindowInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yamul_backend_game_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgTeleportPlayer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yamul_backend_game_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateObject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yamul_backend_game_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateObjectItems); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yamul_backend_game_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgWarmode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yamul_backend_game_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yamul_backend_game_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamPackage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yamul_backend_game_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgExtendedStats_MsgExtendedStats_Dead); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yamul_backend_game_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgExtendedStats_MsgExtendedStats_AttributeLock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yamul_backend_game_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgHealthBar_Values); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yamul_backend_game_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgStatWindowInfo_MsgStatWindowInfoLevel2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yamul_backend_game_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yamul_backend_game_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3_MsgStatWindowInfoLevel4); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yamul_backend_game_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3_MsgStatWindowInfoLevel4_MsgStatWindowInfoLevel5); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yamul_backend_game_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3_MsgStatWindowInfoLevel4_MsgStatWindowInfoLevel5_MsgStatWindowInfoLevel6); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_yamul_backend_game_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgStatWindowInfo_MsgStatWindowInfoLevel2_MsgStatWindowInfoLevel3_MsgStatWindowInfoLevel4_MsgStatWindowInfoLevel5_MsgStatWindowInfoLevel6_MsgStatWindowInfoLevel7); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_yamul_backend_game_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*MsgExtendedStats_Dead)(nil),
		(*MsgExtendedStats_Lock)(nil),
	}
	file_yamul_backend_game_proto_msgTypes[15].OneofWrappers = []interface{}{
		(*Message_ClientMoveRequest)(nil),
		(*Message_HealthBar)(nil),
		(*Message_StatWindowInfo)(nil),
		(*Message_PlayerStartConfirmation)(nil),
		(*Message_TeleportPlayer)(nil),
		(*Message_MoveAck)(nil),
		(*Message_GeneralLightLevel)(nil),
		(*Message_CharacterSelection)(nil),
		(*Message_PlayMusic)(nil),
		(*Message_Warmode)(nil),
		(*Message_UpdateObject)(nil),
		(*Message_MapChange)(nil),
		(*Message_ApplyWorldPatches)(nil),
		(*Message_ExtendedStats)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_yamul_backend_game_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_yamul_backend_game_proto_goTypes,
		DependencyIndexes: file_yamul_backend_game_proto_depIdxs,
		EnumInfos:         file_yamul_backend_game_proto_enumTypes,
		MessageInfos:      file_yamul_backend_game_proto_msgTypes,
	}.Build()
	File_yamul_backend_game_proto = out.File
	file_yamul_backend_game_proto_rawDesc = nil
	file_yamul_backend_game_proto_goTypes = nil
	file_yamul_backend_game_proto_depIdxs = nil
}
